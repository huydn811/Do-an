[{"D:\\Đồ án\\QLTourDL\\client\\src\\App.js":"1","D:\\Đồ án\\QLTourDL\\client\\src\\index.js":"2","D:\\Đồ án\\QLTourDL\\client\\src\\reportWebVitals.js":"3","D:\\Đồ án\\QLTourDL\\client\\src\\reducers\\index.js":"4","D:\\Đồ án\\QLTourDL\\client\\src\\routes.js":"5","D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesFE\\homepage\\homepage.js":"6","D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesFE\\notfoundpage\\notfoundpage.js":"7","D:\\Đồ án\\QLTourDL\\client\\src\\components\\componentsFE\\footer\\footer.js":"8","D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesFE\\detailpage\\detailpage.js":"9","D:\\Đồ án\\QLTourDL\\client\\src\\components\\componentsFE\\header\\header.js":"10","D:\\Đồ án\\QLTourDL\\client\\src\\components\\componentsAdmin\\navbar\\navbar.js":"11","D:\\Đồ án\\QLTourDL\\client\\src\\components\\componentsAdmin\\sidebar\\sidebar.js":"12","D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesAdmin\\pagedashboard\\pagedashboard.js":"13","D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesAdmin\\pagetour\\pageaddtour\\pageaddtour.js":"14","D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesAdmin\\pagetour\\pageedittour\\pageedittour.js":"15","D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesAdmin\\pagetour\\pagealltour\\pagealltour.js":"16","D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesAdmin\\pageemployee\\pageallemployee\\pageallemployee.js":"17","D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesAdmin\\pageemployee\\pageaddemployee\\pageaddemployee.js":"18","D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesAdmin\\pageemployee\\pageeditemployee\\pageeditemployee.js":"19","D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesAdmin\\pageuser\\pagealluser\\pagealluser.js":"20","D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesAdmin\\pageuser\\pageadduser\\pageadduser.js":"21","D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesAdmin\\pageuser\\pageedituser\\pageedituser.js":"22","D:\\Đồ án\\QLTourDL\\client\\src\\components\\componentsAdmin\\menusidebar\\menusidebar.js":"23","D:\\Đồ án\\QLTourDL\\client\\src\\components\\componentsAdmin\\sidebar\\DropDown.js":"24","D:\\Đồ án\\QLTourDL\\client\\src\\reducers\\Tour.js":"25","D:\\Đồ án\\QLTourDL\\client\\src\\constants\\Configs.js":"26","D:\\Đồ án\\QLTourDL\\client\\src\\utils\\ApiCaller.js":"27","D:\\Đồ án\\QLTourDL\\client\\src\\reducers\\itemEditing.js":"28","D:\\Đồ án\\QLTourDL\\client\\src\\actions\\actTour.js":"29","D:\\Đồ án\\QLTourDL\\client\\src\\constants\\ActionTypeTour.js":"30","D:\\Đồ án\\QLTourDL\\client\\src\\constants\\ActionTypeEmployee.js":"31","D:\\Đồ án\\QLTourDL\\client\\src\\actions\\actEmployees.js":"32","D:\\Đồ án\\QLTourDL\\client\\src\\reducers\\employee.js":"33","D:\\Đồ án\\QLTourDL\\client\\src\\constants\\ActionTypeUser.js":"34","D:\\Đồ án\\QLTourDL\\client\\src\\actions\\actUser.js":"35","D:\\Đồ án\\QLTourDL\\client\\src\\reducers\\user.js":"36","D:\\Đồ án\\QLTourDL\\client\\src\\reducers\\login.js":"37","D:\\Đồ án\\QLTourDL\\client\\src\\actions\\actLogin.js":"38","D:\\Đồ án\\QLTourDL\\client\\src\\constants\\ActionTypeLogin.js":"39","D:\\Đồ án\\QLTourDL\\client\\src\\store\\store.js":"40","D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesAdmin\\rootAdmin.js":"41","D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesFE\\rootFE.js":"42","D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesAuth\\pageRegister\\pageRegister.js":"43","D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesAuth\\pagesLogin\\pageLogin.js":"44","D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesFE\\pageAllTour\\pageAllTour.js":"45","D:\\Đồ án\\QLTourDL\\client\\src\\components\\componentsFE\\cart\\Cart.js":"46","D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesFE\\orderPage\\orderPage.js":"47","D:\\Đồ án\\QLTourDL\\client\\src\\constants\\ActionCart.js":"48","D:\\Đồ án\\QLTourDL\\client\\src\\actions\\actCart.js":"49","D:\\Đồ án\\QLTourDL\\client\\src\\reducers\\cart.js":"50","D:\\Đồ án\\QLTourDL\\client\\src\\containers\\CartContainer.js":"51","D:\\Đồ án\\QLTourDL\\client\\src\\components\\componentsFE\\cart\\CartResult.js":"52","D:\\Đồ án\\QLTourDL\\client\\src\\components\\componentsFE\\cart\\CartItem.js":"53","D:\\Đồ án\\QLTourDL\\client\\src\\components\\componentsFE\\cart\\indexCart.js":"54","D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesAuth\\rootAuth.js":"55","D:\\Đồ án\\QLTourDL\\client\\src\\reducers\\search.js":"56","D:\\Đồ án\\QLTourDL\\client\\src\\actions\\actSearch.js":"57","D:\\Đồ án\\QLTourDL\\client\\src\\constants\\Service.js":"58","D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesAdmin\\pageChat\\chat.js":"59","D:\\Đồ án\\QLTourDL\\client\\src\\constants\\ActionChat.js":"60","D:\\Đồ án\\QLTourDL\\client\\src\\reducers\\chat.js":"61","D:\\Đồ án\\QLTourDL\\client\\src\\actions\\actChat.js":"62","D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesAdmin\\pageChat\\chatdetail.js":"63"},{"size":1368,"mtime":1611391023505,"results":"64","hashOfConfig":"65"},{"size":691,"mtime":1610096371752,"results":"66","hashOfConfig":"65"},{"size":362,"mtime":499162500000,"results":"67","hashOfConfig":"65"},{"size":461,"mtime":1615954672564,"results":"68","hashOfConfig":"65"},{"size":4794,"mtime":1616057863478,"results":"69","hashOfConfig":"65"},{"size":12675,"mtime":1615545269572,"results":"70","hashOfConfig":"65"},{"size":695,"mtime":1611114322948,"results":"71","hashOfConfig":"65"},{"size":8320,"mtime":1606905189036,"results":"72","hashOfConfig":"65"},{"size":5501,"mtime":1612927220928,"results":"73","hashOfConfig":"65"},{"size":9615,"mtime":1616346250186,"results":"74","hashOfConfig":"65"},{"size":15203,"mtime":1609555213148,"results":"75","hashOfConfig":"65"},{"size":894,"mtime":1611323496019,"results":"76","hashOfConfig":"65"},{"size":10007,"mtime":1610504612399,"results":"77","hashOfConfig":"65"},{"size":9754,"mtime":1611324238235,"results":"78","hashOfConfig":"65"},{"size":11379,"mtime":1614051369656,"results":"79","hashOfConfig":"65"},{"size":3457,"mtime":1609748406885,"results":"80","hashOfConfig":"65"},{"size":3454,"mtime":1608482776258,"results":"81","hashOfConfig":"65"},{"size":8860,"mtime":1611111558778,"results":"82","hashOfConfig":"65"},{"size":11143,"mtime":1611111895732,"results":"83","hashOfConfig":"65"},{"size":3176,"mtime":1608707319885,"results":"84","hashOfConfig":"65"},{"size":6214,"mtime":1611111227366,"results":"85","hashOfConfig":"65"},{"size":7158,"mtime":1616216357798,"results":"86","hashOfConfig":"65"},{"size":2853,"mtime":1615777038065,"results":"87","hashOfConfig":"65"},{"size":1897,"mtime":1609378397209,"results":"88","hashOfConfig":"65"},{"size":1011,"mtime":1610095757080,"results":"89","hashOfConfig":"65"},{"size":51,"mtime":1607742874481,"results":"90","hashOfConfig":"65"},{"size":463,"mtime":1610441873720,"results":"91","hashOfConfig":"65"},{"size":742,"mtime":1616297885087,"results":"92","hashOfConfig":"65"},{"size":2010,"mtime":1611113981036,"results":"93","hashOfConfig":"65"},{"size":266,"mtime":1610101584333,"results":"94","hashOfConfig":"65"},{"size":252,"mtime":1608180798207,"results":"95","hashOfConfig":"65"},{"size":2122,"mtime":1608626016669,"results":"96","hashOfConfig":"65"},{"size":1135,"mtime":1608625584942,"results":"97","hashOfConfig":"65"},{"size":220,"mtime":1608656748474,"results":"98","hashOfConfig":"65"},{"size":1958,"mtime":1614248425588,"results":"99","hashOfConfig":"65"},{"size":861,"mtime":1608710653075,"results":"100","hashOfConfig":"65"},{"size":956,"mtime":1609829680662,"results":"101","hashOfConfig":"65"},{"size":1494,"mtime":1609383886077,"results":"102","hashOfConfig":"65"},{"size":129,"mtime":1609383748384,"results":"103","hashOfConfig":"65"},{"size":730,"mtime":1611113510873,"results":"104","hashOfConfig":"65"},{"size":1440,"mtime":1610505239691,"results":"105","hashOfConfig":"65"},{"size":1412,"mtime":1611062592573,"results":"106","hashOfConfig":"65"},{"size":9385,"mtime":1611801938605,"results":"107","hashOfConfig":"65"},{"size":7205,"mtime":1614270404488,"results":"108","hashOfConfig":"65"},{"size":3679,"mtime":1611320447617,"results":"109","hashOfConfig":"65"},{"size":1464,"mtime":1615280671155,"results":"110","hashOfConfig":"65"},{"size":3581,"mtime":1609660755321,"results":"111","hashOfConfig":"65"},{"size":159,"mtime":1609753169541,"results":"112","hashOfConfig":"65"},{"size":566,"mtime":1615953491691,"results":"113","hashOfConfig":"65"},{"size":3494,"mtime":1609930285661,"results":"114","hashOfConfig":"65"},{"size":3166,"mtime":1609925063906,"results":"115","hashOfConfig":"65"},{"size":1315,"mtime":1610529548769,"results":"116","hashOfConfig":"65"},{"size":3913,"mtime":1615280805268,"results":"117","hashOfConfig":"65"},{"size":302,"mtime":1609923573500,"results":"118","hashOfConfig":"65"},{"size":1170,"mtime":1610015704949,"results":"119","hashOfConfig":"65"},{"size":308,"mtime":1611106521850,"results":"120","hashOfConfig":"65"},{"size":186,"mtime":1610102608067,"results":"121","hashOfConfig":"65"},{"size":158,"mtime":1610958718776,"results":"122","hashOfConfig":"65"},{"size":13792,"mtime":1616398654729,"results":"123","hashOfConfig":"65"},{"size":234,"mtime":1616053765822,"results":"124","hashOfConfig":"65"},{"size":588,"mtime":1616296528708,"results":"125","hashOfConfig":"65"},{"size":891,"mtime":1616246133904,"results":"126","hashOfConfig":"65"},{"size":6339,"mtime":1616398092572,"results":"127","hashOfConfig":"65"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"13zpc3p",{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"140"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"148"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"148"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"167"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"181"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"137"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"151"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"195"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"140"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"195"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"234"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"237"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"167"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"181"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"188"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"254","messages":"255","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"140"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"137"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"167"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"151"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Đồ án\\QLTourDL\\client\\src\\App.js",[],["297","298"],"D:\\Đồ án\\QLTourDL\\client\\src\\index.js",["299"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { persistor, store } from './store/store';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\nimport { Provider } from 'react-redux';\nimport { compose } from 'redux';\n\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = { store }>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n",["300","301"],"D:\\Đồ án\\QLTourDL\\client\\src\\reportWebVitals.js",[],["302","303"],"D:\\Đồ án\\QLTourDL\\client\\src\\reducers\\index.js",[],["304","305"],"D:\\Đồ án\\QLTourDL\\client\\src\\routes.js",[],"D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesFE\\homepage\\homepage.js",["306","307","308","309","310","311","312","313","314","315","316"],"import React, { Component } from \"react\";\r\n\r\nimport SwiperCore, { Navigation, Pagination, Scrollbar, A11y, Autoplay  } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';\r\nimport 'swiper/components/pagination/pagination.scss';\r\nimport 'swiper/components/scrollbar/scrollbar.scss';\r\nimport 'swiper/components/effect-cube/effect-cube.min.css';\r\n\r\nimport { Container, Row, Col} from \"react-bootstrap\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport {actFetchToursReq} from \"../../../actions/actTour\";\r\nimport \"./homepage.scss\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { TOUR_IMG } from \"../../../constants/Service\";\r\nimport { connect } from \"react-redux\";\r\n\r\nSwiperCore.use([Navigation, Pagination, Scrollbar, A11y, Autoplay ]);\r\nclass HomePage extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            isOpenSlide : false\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.props.onFectAllTour();\r\n    }\r\n    componentDidUpdate () {\r\n        if(this.state.isOpenSlide === false){\r\n            this.setState({\r\n                isOpenSlide : !this.state.isOpenSlide\r\n            })\r\n        }\r\n    }\r\n    showSlide = (tourDestination) => {\r\n        return (\r\n            <Swiper lazy = {true}\r\n                spaceBetween={50}\r\n                slidesPerView={3}\r\n                // onSlideChange={() => console.log('slide change')}\r\n                // onSwiper={(swiper) => console.log(swiper)}\r\n                // EffectCube = {true}\r\n                autoplay={{ delay: 3000 }} \r\n                loop = {true}\r\n            >\r\n                {this.showTopDestination(tourDestination)}\r\n            </Swiper>\r\n        )\r\n    }\r\n    showTopDestination = (tourDestination) => {\r\n        let result = null;\r\n        let items = [...tourDestination];\r\n        let newItems = [];\r\n        for (var i = 0; i < 5 && i <= newItems.length; i++) {\r\n            var idx = Math.floor(Math.random() * items.length);\r\n            newItems.push(items[idx]);\r\n            items.splice(idx, 1);\r\n        }\r\n        if(newItems !== undefined) {\r\n            result = newItems.map((item, idx)=> {\r\n                if(item !== null && item !== undefined){\r\n                    return (\r\n                        <SwiperSlide className=\"swiperSlide\" key = {idx}>\r\n                            <div className=\"destination-item\" >\r\n                                <div className=\"img-destination-item\">\r\n                                    <NavLink  to={`/detail-tour/${item._id}`}>\r\n                                        <img src={`${TOUR_IMG}/${item.avatarTour}`}/>\r\n                                    </NavLink>\r\n                                </div>\r\n                                <div className=\"title-destination-item\">\r\n                                    <div className=\"title-item\">\r\n                                        <p>{item.tourName}</p>\r\n                                    </div>\r\n                                    {/* <Row>\r\n                                        <Col lg={8}>\r\n                                            <div className=\"title-item\">\r\n                                                <p>Cau Rong Da Nang</p>\r\n                                            </div>\r\n                                        </Col> */}\r\n                                        {/* <Col lg={4}>\r\n                                            <div className=\"title-item qty-tour\">\r\n                                                <p>38 Tours</p>\r\n                                            </div>\r\n                                        </Col> */}\r\n                                    {/* </Row> */}\r\n                                </div>\r\n                            </div>\r\n                        </SwiperSlide>\r\n                    )\r\n                }\r\n            })\r\n        }\r\n        return result;\r\n    }\r\n    showAllTours = (tours) => {\r\n        var result = null;\r\n        if(tours.length > 0) {\r\n            result = tours.map((tour,index)=>{\r\n                if(tour !== undefined){\r\n                    return(\r\n                        <Col key = {index} lg={4}>\r\n                            <div className=\"our-tour-item\">\r\n                                <div className=\"img-tour-item\">\r\n                                    <NavLink className=\"navLink\" to={`/detail-tour/${tour._id}`}>\r\n                                        <img src={`${TOUR_IMG}/${tour.avatarTour}`}/>\r\n                                    </NavLink>\r\n                                </div>\r\n                                <div className=\"name-tour\">\r\n                                    <NavLink  to={`/detail-tour/${tour._id}`}>\r\n                                        <legend>{tour.tourName}</legend>\r\n                                    </NavLink>\r\n                                </div>\r\n                                <div className=\"time-price-our-tour\">\r\n                                    <Row>\r\n                                        <Col lg={7}>\r\n                                            <div className=\"time-tour\">\r\n                                            <NavLink className=\"navLink-time-tour\"  to={`/detail-tour/${tour._id}`}>\r\n                                                <fieldset>EXPLORE</fieldset>\r\n                                            </NavLink>\r\n                                                <div className=\"icon-time\">\r\n                                                    {/* <img src=\"../../../img/icon-time.svg\"/> */}\r\n                                                    <i class=\"fas fa-arrow-right\"></i>\r\n                                                </div>   \r\n                                                {/* <fieldset>5 Days / 4 Nights</fieldset> */}\r\n                                                {/* <fieldset>Sale</fieldset> */}\r\n                                                \r\n                                            </div>\r\n                                        </Col>\r\n                                        <Col lg={5}>\r\n                                            <div className=\"price-tour\">\r\n                                                <fieldset>{tour.priceTour}<span>₫/person</span></fieldset>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                    )\r\n                }\r\n            })\r\n        }\r\n        return result;\r\n    }\r\n    render() {\r\n        var {tours,search } = this.props;\r\n        // // var isLogin = JSON.parse(localStorage.getItem(\"login\"));\r\n        // // var isLogin = this.props.login; //get data from redux\r\n        // if(search){\r\n        //     tours = tours.filter((tour)=> {\r\n        //         return tour.tourName.toLowerCase().indexOf(search) !== -1;\r\n        //     });\r\n        // }\r\n        // if(isLogin.isLogin === true){\r\n            return(\r\n                <div>\r\n                    {/* <Header/> */}\r\n                    <div className=\"homePage\">\r\n                       <Container>\r\n                            <div className=\"top-destination\">\r\n                                <legend>Top Destination</legend>\r\n                                <div className = \"list-destination\">\r\n                                    {this.showSlide(tours)}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"our-tour\">\r\n                                <div className=\"title-our-tour\">\r\n                                    <legend>Our Tours</legend>\r\n                                </div>\r\n                                <div className=\"list-our-tour\">\r\n                                    <Row>\r\n                                        {this.showAllTours(tours)}\r\n                                    </Row>\r\n                                </div>\r\n                            </div>\r\n                            {/* <div className=\"travel-tip\">\r\n                                <div className=\"title-travel-trip\">\r\n                                    <legend>Travel Tips</legend>\r\n                                </div>\r\n                                <div className=\"img-travel-tip\">\r\n                                    <img src=\"../../../img/img-travel-tip.svg\" />\r\n                                </div>\r\n                            </div> */}\r\n                            <div className=\"travel-tip\">\r\n                                <div className=\"title-travel-trip\">\r\n                                    <legend>Travel Tips</legend>\r\n                                </div>\r\n                                <div className=\"slide-travel-tip\">\r\n                                    <Swiper\r\n                                        autoplay={{ delay: 3000 }} \r\n                                        loop = {true}\r\n                                        // spaceBetween={50}\r\n                                        // slidesPerView={3}\r\n                                        // navigation\r\n                                        // pagination={{ clickable: true }}\r\n                                        scrollbar={{ draggable: true }}\r\n                                        // onSwiper={(swiper) => console.log(swiper)}\r\n                                        // onSlideChange={() => console.log('slide change')}\r\n                                    >\r\n                                        <SwiperSlide>\r\n                                            <div className=\"img-slide-travel-tip\">\r\n                                                <img src=\"../../../../img/travel-tip-1.svg\"/>\r\n                                            </div>\r\n                                        </SwiperSlide>\r\n                                        <SwiperSlide>\r\n                                            <div className=\"img-slide-travel-tip\">\r\n                                                <img src=\"../../../../img/img-travel-tip.svg\"/>\r\n                                            </div>\r\n                                        </SwiperSlide>\r\n                                        <SwiperSlide>\r\n                                            <div className=\"img-slide-travel-tip\">\r\n                                                <img src=\"../../../../img/travel-tip-2.svg\"/>\r\n                                            </div>\r\n                                        </SwiperSlide>\r\n                                        <SwiperSlide>\r\n                                            <div className=\"img-slide-travel-tip\">\r\n                                                <img src=\"../../../../img/travel-tip3.svg\"/>\r\n                                            </div>\r\n                                        </SwiperSlide>\r\n                                        <SwiperSlide>\r\n                                            <div className=\"img-slide-travel-tip\">\r\n                                                <img src=\"../../../../img/travel-tip-4.svg\"/>\r\n                                            </div>\r\n                                        </SwiperSlide>\r\n                                        <SwiperSlide>\r\n                                            <div className=\"img-slide-travel-tip\">\r\n                                                <img src=\"../../../../img/travel-tip-5.svg\"/>\r\n                                            </div>\r\n                                        </SwiperSlide>\r\n                                        \r\n                                    </Swiper>\r\n                                </div>\r\n                            </div>\r\n                        </Container> \r\n                    </div>\r\n                    {/* <Footer/> */}\r\n                </div>\r\n            );\r\n        // }\r\n        // else {\r\n        //     history.push(\"/login\");\r\n        //     return null;\r\n        // }\r\n    }\r\n}\r\n//mapStateToProps co 2 tham so tham so thu1 la currentState tham so thu 2 neeu dc truyen vao thi la object cua props da dc truyen cho component\r\nconst mapStateToProps = (state) => { //get\r\n    return {\r\n        login : state.login,\r\n        tours : state.tour,\r\n        search : state.search,\r\n    }\r\n}\r\nconst mapDisPatchToProps = (dispatch, props) => {\r\n    return {\r\n        onFectAllTour : () => {\r\n            dispatch(actFetchToursReq());\r\n        }\r\n    }\r\n}\r\nexport default  withRouter(connect(mapStateToProps,mapDisPatchToProps)(HomePage));","D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesFE\\notfoundpage\\notfoundpage.js",[],["317","318"],"D:\\Đồ án\\QLTourDL\\client\\src\\components\\componentsFE\\footer\\footer.js",[],["319","320"],"D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesFE\\detailpage\\detailpage.js",["321","322","323"],"import React, { Component } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport {actGetTourByIDReq} from \"../../../actions/actTour\";\r\nimport {actAddToCart} from \"../../../actions/actCart\";\r\nimport { connect } from \"react-redux\";\r\nimport { TOUR_IMG } from \"../../../constants/Service\";\r\nimport \"./detailpage.scss\";\r\nimport { Container } from \"react-bootstrap\";\r\n// import { actAddToCartReq } from \"../../../actions/actCart\";\r\nclass DetailPage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    componentDidMount(){\r\n        let { match } = this.props;\r\n        if(match) {\r\n            let tourID = match.params.tourID;\r\n            this.props.getIDTourDetail(tourID);\r\n        }\r\n    }\r\n\r\n    showDetailTour = (tours) => {\r\n        if(tours) {\r\n            return (\r\n                <div className=\"detail-tour\">\r\n                    <div className=\"title-detail-tour\">\r\n                        <legend>{tours.tourName}</legend>\r\n                    </div>\r\n                    <div className=\"img-detail-tour\">\r\n                        <img src = {`${TOUR_IMG}/${tours.avatarTour}`}/>\r\n                    </div>\r\n                    <div className=\"description-detail-tour\">\r\n                        <div className=\"description-detail\">\r\n                            <div className=\"title-description-detail\">\r\n                                <legend>Description</legend>\r\n                            </div>\r\n                            <div className=\"description-detail-zone\">\r\n                                <fieldset>\r\n                                    {tours.descriptionTour}\r\n                                </fieldset>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"description-detail-tour\">\r\n                        <div className=\"description-detail\">\r\n                            <div className=\"title-description-detail\">\r\n                                <legend>Detail</legend>\r\n                            </div>\r\n                            <div className=\"description-detail-zone\">\r\n                                <fieldset>\r\n                                    {tours.detailTour}\r\n                                </fieldset>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }else{\r\n            return(\r\n                <div className=\"detail-tour\">\r\n                    <div className=\"title-detail-tour\">\r\n                        <legend>Tour is not found</legend>\r\n                    </div>\r\n                    <div className=\"img-detail-tour\">\r\n                        <img src=\"../../../img/detail-tour.svg\"/>\r\n                    </div>\r\n                    <div className=\"description-detail-tour\">\r\n                        <div className=\"description-detail\">\r\n                            <div className=\"title-description-detail\">\r\n                                <legend>Description</legend>\r\n                            </div>\r\n                            <div className=\"description-detail-zone\">\r\n                                <fieldset>\r\n                                    Not Found\r\n                                </fieldset>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"description-detail-tour\">\r\n                        <div className=\"description-detail\">\r\n                            <div className=\"title-description-detail\">\r\n                                <legend>Detail</legend>\r\n                            </div>\r\n                            <div className=\"description-detail-zone\">\r\n                                <fieldset>\r\n                                    Not Found\r\n                                </fieldset>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    \r\n    addToCart = (tour) => {\r\n        if(this.props.login.isLogin === true){\r\n            this.props.onAddToCart(tour);\r\n            this.props.history.push(\"/my-cart\");\r\n        }else {\r\n            this.props.history.push(\"/login\")\r\n        }\r\n    }\r\n\r\n    render(){\r\n        var { detailTour } = this.props;\r\n        console.log(this.props, '[this.props]');\r\n        return(\r\n            <div className=\"detail-page\">\r\n                <Container> \r\n                    {this.showDetailTour(detailTour)}\r\n                    <div className=\"btn-order-tour\">\r\n                        <Button \r\n                            variant=\"warning\"\r\n                            onClick = {()=>this.addToCart(detailTour)}>\r\n                            Add To Cart\r\n                        </Button>\r\n                    </div>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => { //get all data from store\r\n    return {\r\n        login : state.login,\r\n        detailTour : state.itemEditing,\r\n        tourInCart : state.cart,\r\n        userAddToCart : state.login,\r\n    }\r\n}\r\nconst mapDisPatchToProps = (dispatch,props) => {\r\n    return {\r\n        getIDTourDetail : (id) => {\r\n            dispatch(actGetTourByIDReq(id))\r\n        },\r\n        onAddToCart : (tour) => {\r\n            dispatch(actAddToCart(tour,1 ))\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDisPatchToProps) (DetailPage);",["324","325"],"D:\\Đồ án\\QLTourDL\\client\\src\\components\\componentsFE\\header\\header.js",["326","327","328","329","330","331","332","333","334","335","336","337"],"D:\\Đồ án\\QLTourDL\\client\\src\\components\\componentsAdmin\\navbar\\navbar.js",["338"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./navbar.scss\";\r\nclass NavBar extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            statusDropdown : false\r\n        }\r\n    }\r\n\r\n    render(){\r\n        var {statusDropdown} = this.state;\r\n        return(\r\n            <div className=\"navbar\">\r\n                <div className=\"navbar-bg\"></div>\r\n                <nav className=\"navbar navbar-expand-lg main-navbar\">\r\n                    <form className=\"form-inline mr-auto\">\r\n                        <ul className=\"navbar-nav mr-3\">\r\n                            <li><Link to= \"#\" data-toggle=\"search\" className=\"nav-link nav-link-lg d-sm-none\"><i className=\"fas fa-search\"></i></Link></li>\r\n                        </ul>\r\n                    <div className=\"search-element\">\r\n                        <input className=\"form-control\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" data-width=\"250\" />\r\n                        <button className=\"btn\" type=\"submit\"><i className=\"fas fa-search\"></i></button>\r\n                        <div className=\"search-backdrop\"></div>\r\n                        <div className=\"search-result\">\r\n                        <div className=\"search-header\">\r\n                            Histories\r\n                        </div>\r\n                        <div className=\"search-item\">\r\n                            <Link to=\"#\">How to hack NASA using CSS</Link>\r\n                            <Link to=\"#\" className=\"search-close\"><i className=\"fas fa-times\"></i></Link>\r\n                        </div>\r\n                        <div className=\"search-item\">\r\n                            <Link to=\"#\">Kodinger.com</Link>\r\n                            <Link to=\"#\" className=\"search-close\"><i className=\"fas fa-times\"></i></Link>\r\n                        </div>\r\n                        <div className=\"search-item\">\r\n                            <Link to=\"#\">#Stisla</Link>\r\n                            <Link to=\"#\" className=\"search-close\"><i className=\"fas fa-times\"></i></Link>\r\n                        </div>\r\n                        <div className=\"search-header\">\r\n                            Result\r\n                        </div>\r\n                        <div className=\"search-item\">\r\n                            <Link to=\"#\">\r\n                                <img className=\"mr-3 rounded\" width=\"30\" src=\"../assets/img/products/product-3-50.png\" alt=\"product\"/>\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"search-item\">\r\n                            <Link to=\"#\">\r\n                                <img className=\"mr-3 rounded\" width=\"30\" src=\"../assets/img/products/product-2-50.png\" alt=\"product\"/>\r\n                            Drone X2 New Gen-7\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"search-item\">\r\n                            <Link to=\"#\">\r\n                                <img className=\"mr-3 rounded\" width=\"30\" src=\"../assets/img/products/product-1-50.png\" alt=\"product\" />\r\n                            Headphone Blitz\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"search-header\">\r\n                            Projects\r\n                        </div>\r\n                        <div className=\"search-item\">\r\n                            <Link to=\"#\">\r\n                            <div className=\"search-icon bg-danger text-white mr-3\">\r\n                                <i className=\"fas fa-code\"></i>\r\n                            </div>\r\n                            Stisla Admin Template\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"search-item\">\r\n                            <Link to=\"#\">\r\n                            <div className=\"search-icon bg-primary text-white mr-3\">\r\n                                <i className=\"fas fa-laptop\"></i>\r\n                            </div>\r\n                            Create a new Homepage Design\r\n                            </Link>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    </form>\r\n                    <ul className=\"navbar-nav navbar-right\">\r\n                        <li className=\"dropdown dropdown-list-toggle\"><Link to=\"#\" data-toggle=\"dropdown\" className=\"nav-link nav-link-lg message-toggle beep\"><i className=\"far fa-envelope\"></i></Link>\r\n                            <div className=\"dropdown-menu dropdown-list dropdown-menu-right\">\r\n                            {/* <div className=\"dropdown-header\">Messages\r\n                                <div className=\"float-right\">\r\n                                <Link to=\"#\">Mark All As Read</Link>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"dropdown-list-content dropdown-list-message\">\r\n                                <Link to=\"#\" className=\"dropdown-item dropdown-item-unread\">\r\n                                <div className=\"dropdown-item-avatar\">\r\n                                    <img alt=\"image\" src=\"../assets/img/avatar/avatar-1.png\" className=\"rounded-circle\" />\r\n                                    <div className=\"is-online\"></div>\r\n                                </div>\r\n                                <div className=\"dropdown-item-desc\">\r\n                                    <b>Kusnaedi</b>\r\n                                    <p>Hello, Bro!</p>\r\n                                    <div className=\"time\">10 Hours Ago</div>\r\n                                </div>\r\n                                </Link>\r\n                                <Link to=\"#\" className=\"dropdown-item dropdown-item-unread\">\r\n                                <div className=\"dropdown-item-avatar\">\r\n                                    <img alt=\"image\" src=\"../assets/img/avatar/avatar-2.png\" className=\"rounded-circle\" />\r\n                                </div>\r\n                                <div className=\"dropdown-item-desc\">\r\n                                    <b>Dedik Sugiharto</b>\r\n                                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit</p>\r\n                                    <div className=\"time\">12 Hours Ago</div>\r\n                                </div>\r\n                                </Link>\r\n                                <Link to=\"#\" className=\"dropdown-item dropdown-item-unread\">\r\n                                <div className=\"dropdown-item-avatar\">\r\n                                    <img alt=\"image\" src=\"../assets/img/avatar/avatar-3.png\" className=\"rounded-circle\" />\r\n                                    <div className=\"is-online\"></div>\r\n                                </div>\r\n                                <div className=\"dropdown-item-desc\">\r\n                                    <b>Agung Ardiansyah</b>\r\n                                    <p>Sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\r\n                                    <div className=\"time\">12 Hours Ago</div>\r\n                                </div>\r\n                                </Link>\r\n                                <Link to=\"#\" className=\"dropdown-item\">\r\n                                <div className=\"dropdown-item-avatar\">\r\n                                    <img alt=\"image\" src=\"../assets/img/avatar/avatar-4.png\" className=\"rounded-circle\" />\r\n                                </div>\r\n                                <div className=\"dropdown-item-desc\">\r\n                                    <b>Ardian Rahardiansyah</b>\r\n                                    <p>Duis aute irure dolor in reprehenderit in voluptate velit ess</p>\r\n                                    <div className=\"time\">16 Hours Ago</div>\r\n                                </div>\r\n                                </Link>\r\n                                <Link to=\"#\" className=\"dropdown-item\">\r\n                                <div className=\"dropdown-item-avatar\">\r\n                                    <img alt=\"image\" src=\"../assets/img/avatar/avatar-5.png\" className=\"rounded-circle\" />\r\n                                </div>\r\n                                <div className=\"dropdown-item-desc\">\r\n                                    <b>Alfa Zulkarnain</b>\r\n                                    <p>Exercitation ullamco laboris nisi ut aliquip ex ea commodo</p>\r\n                                    <div className=\"time\">Yesterday</div>\r\n                                </div>\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"dropdown-footer text-center\">\r\n                                <Link to=\"#\">View All <i className=\"fas fa-chevron-right\"></i></Link>\r\n                            </div> */}\r\n                            </div>\r\n                        </li>\r\n                        <li className=\"dropdown dropdown-list-toggle\"><Link to=\"#\" data-toggle=\"dropdown\" className=\"nav-link notification-toggle nav-link-lg beep\"><i className=\"far fa-bell\"></i></Link>\r\n                            <div className=\"dropdown-menu dropdown-list dropdown-menu-right\">\r\n                            {/* <div className=\"dropdown-header\">Notifications\r\n                                <div className=\"float-right\">\r\n                                <Link to=\"#\">Mark All As Read</Link>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"dropdown-list-content dropdown-list-icons\">\r\n                                <Link to=\"#\" className=\"dropdown-item dropdown-item-unread\">\r\n                                <div className=\"dropdown-item-icon bg-primary text-white\">\r\n                                    <i className=\"fas fa-code\"></i>\r\n                                </div>\r\n                                <div className=\"dropdown-item-desc\">\r\n                                    Template update is available now!\r\n                                    <div className=\"time text-primary\">2 Min Ago</div>\r\n                                </div>\r\n                                </Link>\r\n                                <Link to=\"#\" className=\"dropdown-item\">\r\n                                <div className=\"dropdown-item-icon bg-info text-white\">\r\n                                    <i className=\"far fa-user\"></i>\r\n                                </div>\r\n                                <div className=\"dropdown-item-desc\">\r\n                                    <b>You</b> and <b>Dedik Sugiharto</b> are now friends\r\n                                    <div className=\"time\">10 Hours Ago</div>\r\n                                </div>\r\n                                </Link>\r\n                                <Link to=\"#\" className=\"dropdown-item\">\r\n                                <div className=\"dropdown-item-icon bg-success text-white\">\r\n                                    <i className=\"fas fa-check\"></i>\r\n                                </div>\r\n                                <div className=\"dropdown-item-desc\">\r\n                                    <b>Kusnaedi</b> has moved task <b>Fix bug header</b> to <b>Done</b>\r\n                                    <div className=\"time\">12 Hours Ago</div>\r\n                                </div>\r\n                                </Link>\r\n                                <Link to=\"#\" className=\"dropdown-item\">\r\n                                <div className=\"dropdown-item-icon bg-danger text-white\">\r\n                                    <i className=\"fas fa-exclamation-triangle\"></i>\r\n                                </div>\r\n                                <div className=\"dropdown-item-desc\">\r\n                                    Low disk space. Let's clean it!\r\n                                    <div className=\"time\">17 Hours Ago</div>\r\n                                </div>\r\n                                </Link>\r\n                                <Link to=\"#\" className=\"dropdown-item\">\r\n                                <div className=\"dropdown-item-icon bg-info text-white\">\r\n                                    <i className=\"fas fa-bell\"></i>\r\n                                </div>\r\n                                <div className=\"dropdown-item-desc\">\r\n                                    Welcome to Stisla template!\r\n                                    <div className=\"time\">Yesterday</div>\r\n                                </div>\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"dropdown-footer text-center\">\r\n                                <Link to=\"#\">View All <i className=\"fas fa-chevron-right\"></i></Link>\r\n                            </div> */}\r\n                            </div>\r\n                        </li>\r\n                        <li \r\n                            className=\"dropdown\"\r\n                            onClick = { ()=> this.setState({statusDropdown : !statusDropdown})}>\r\n                            <Link to=\"#\" data-toggle=\"dropdown\" className=\"nav-link dropdown-toggle nav-link-lg nav-link-user\">\r\n                                <img alt=\"image\" src=\"../../../../img/121241321_670001800616075_329923169218267049_o.jpg\" className=\"rounded-circle mr-1\" />\r\n                                <div className=\"d-sm-none d-lg-inline-block\">\r\n                                    Hi,{this.props.userIsLogging.dataUserLogin.user.userName}\r\n                                </div>\r\n                            </Link>\r\n                            <div className={`dropdown-menu dropdown-menu-right ${statusDropdown ? 'd-block active' : 'none'}`}>\r\n                                <div className=\"dropdown-title\">Logged in 5 min ago</div>\r\n                                <Link to=\"features-profile.html\" className=\"dropdown-item has-icon\">\r\n                                    <i className=\"far fa-user\"></i> Profile\r\n                                </Link>\r\n                                <Link to=\"features-activities.html\" className=\"dropdown-item has-icon\">\r\n                                    <i className=\"fas fa-bolt\"></i> Activities\r\n                                </Link>\r\n                                <Link to=\"features-settings.html\" className=\"dropdown-item has-icon\">\r\n                                    <i className=\"fas fa-cog\"></i> Settings\r\n                                </Link>\r\n                            <div className=\"dropdown-divider\"></div>\r\n                            <Link to=\"#\" className=\"dropdown-item has-icon text-danger\">\r\n                                <i className=\"fas fa-sign-out-alt\"></i> Logout\r\n                            </Link>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userIsLogging : state.login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,null) (NavBar);","D:\\Đồ án\\QLTourDL\\client\\src\\components\\componentsAdmin\\sidebar\\sidebar.js",[],["339","340"],"D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesAdmin\\pagedashboard\\pagedashboard.js",["341","342","343","344","345","346","347","348","349","350","351"],"import React, { Component } from \"react\";\r\nimport \"./pagedashboard.scss\";\r\nclass PageDashBoard extends Component {\r\n    render(){\r\n        return(\r\n            <div className=\"dashboard\">\r\n                <div className=\"main-content\" style={{minHeight: \"260px\"}}>\r\n                    <section className=\"section\">\r\n                        <div className=\"section-header\">\r\n                            <h1>Dashboard</h1>\r\n                        </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-3 col-md-6 col-sm-6 col-12\">\r\n                            <div className=\"card card-statistic-1\">\r\n                                <div className=\"card-icon bg-primary\">\r\n                                    <i className=\"far fa-user\"></i>\r\n                                </div>\r\n                                <div className=\"card-wrap\">\r\n                                    <div className=\"card-header\">\r\n                                        <h4>Total Tour</h4>\r\n                                    </div>\r\n                                    <div className=\"card-body\">10</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-3 col-md-6 col-sm-6 col-12\">\r\n                        <div className=\"card card-statistic-1\">\r\n                            <div className=\"card-icon bg-danger\">\r\n                            <i className=\"far fa-newspaper\"></i>\r\n                            </div>\r\n                            <div className=\"card-wrap\">\r\n                            <div className=\"card-header\">\r\n                                <h4>Total Employee</h4>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                42\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"col-lg-3 col-md-6 col-sm-6 col-12\">\r\n                        <div className=\"card card-statistic-1\">\r\n                            <div className=\"card-icon bg-warning\">\r\n                            <i className=\"far fa-file\"></i>\r\n                            </div>\r\n                            <div className=\"card-wrap\">\r\n                            <div className=\"card-header\">\r\n                                <h4>Total User</h4>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                1,201\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"col-lg-3 col-md-6 col-sm-6 col-12\">\r\n                        <div className=\"card card-statistic-1\">\r\n                            <div className=\"card-icon bg-success\">\r\n                            <i className=\"fas fa-circle\"></i>\r\n                            </div>\r\n                            <div className=\"card-wrap\">\r\n                            <div className=\"card-header\">\r\n                                <h4>Total Transport</h4>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                47\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-8 col-md-12 col-12 col-sm-12\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\">\r\n                                <h4>Statistics</h4>\r\n                                <div className=\"card-header-action\">\r\n                                    <div className=\"btn-group\">\r\n                                    <a href=\"#\" className=\"btn btn-primary\">Week</a>\r\n                                    <a href=\"#\" className=\"btn\">Month</a>\r\n                                    </div>\r\n                                </div>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                <canvas id=\"myChart\" height=\"182\"></canvas>\r\n                                <div className=\"statistic-details mt-sm-4\" style={{display : \"flex\", justifyContent:\"space-around\"}}>\r\n                                    <div className=\"statistic-details-item\">\r\n                                    <span className=\"text-muted\"><span className=\"text-primary\"><i className=\"fas fa-caret-up\"></i></span> 7%</span>\r\n                                    <div className=\"detail-value\">$243</div>\r\n                                    <div className=\"detail-name\">Today's Sales</div>\r\n                                    </div>\r\n                                    <div className=\"statistic-details-item\">\r\n                                    <span className=\"text-muted\"><span className=\"text-danger\"><i className=\"fas fa-caret-down\"></i></span> 23%</span>\r\n                                    <div className=\"detail-value\">$2,902</div>\r\n                                    <div className=\"detail-name\">This Week's Sales</div>\r\n                                    </div>\r\n                                    <div className=\"statistic-details-item\">\r\n                                    <span className=\"text-muted\"><span className=\"text-primary\"><i className=\"fas fa-caret-up\"></i></span>9%</span>\r\n                                    <div className=\"detail-value\">$12,821</div>\r\n                                    <div className=\"detail-name\">This Month's Sales</div>\r\n                                    </div>\r\n                                    <div className=\"statistic-details-item\">\r\n                                    <span className=\"text-muted\"><span className=\"text-primary\"><i className=\"fas fa-caret-up\"></i></span> 19%</span>\r\n                                    <div className=\"detail-value\">$92,142</div>\r\n                                    <div className=\"detail-name\">This Year's Sales</div>\r\n                                    </div>\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-md-6 col-12\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header\">\r\n                                    <h4>This Week Stats</h4>\r\n                                    <div className=\"card-header-action\">\r\n                                        <div className=\"dropdown\">\r\n                                        <a href=\"#\" className=\"dropdown-toggle btn btn-primary\" data-toggle=\"dropdown\">Filter</a>\r\n                                        <div className=\"dropdown-menu dropdown-menu-right\">\r\n                                            <a href=\"#\" className=\"dropdown-item has-icon\"><i className=\"far fa-circle\"></i> Electronic</a>\r\n                                            <a href=\"#\" className=\"dropdown-item has-icon\"><i className=\"far fa-circle\"></i> T-shirt</a>\r\n                                            <a href=\"#\" className=\"dropdown-item has-icon\"><i className=\"far fa-circle\"></i> Hat</a>\r\n                                            <div className=\"dropdown-divider\"></div>\r\n                                            <a href=\"#\" className=\"dropdown-item\">View All</a>\r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                    <div className=\"summary\">\r\n                                        <div className=\"summary-info\">\r\n                                        <h4>$1,053</h4>\r\n                                        <div className=\"text-muted\">Sold 3 items on 2 customers</div>\r\n                                        <div className=\"d-block mt-2\">\r\n                                            <a href=\"#\">View All</a>\r\n                                        </div>\r\n                                        </div>\r\n                                        <div className=\"summary-item\">\r\n                                        <h6>Item List <span className=\"text-muted\">(3 Items)</span></h6>\r\n                                        <ul className=\"list-unstyled list-unstyled-border\">\r\n                                            <li className=\"media\">\r\n                                                <a href=\"#\">\r\n                                                    <img className=\"mr-3 rounded\" width=\"50\" src=\"../../../../img/121241321_670001800616075_329923169218267049_o.jpg\" alt=\"product\" />\r\n                                                </a>\r\n                                                <div className=\"media-body\">\r\n                                                    <div className=\"media-right\">$405</div>\r\n                                                    <div className=\"media-title\"><a href=\"#\">PlayStation 9</a></div>\r\n                                                    <div className=\"text-muted text-small\">by <a href=\"#\">Hasan Basri</a> <div className=\"bullet\"></div> Sunday</div>\r\n                                                </div>\r\n                                            </li>\r\n                                        </ul>\r\n                                        </div>\r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PageDashBoard;",["352","353"],"D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesAdmin\\pagetour\\pageaddtour\\pageaddtour.js",["354"],"import React, { Component } from \"react\";\r\nimport { Form, Button, Container } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { actAddTourReq } from \"../../../../actions/actTour\";\r\nimport \"./pageaddtour.scss\";\r\nclass PageAddTour extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            frmTour : {\r\n                tourID  : \"\",\r\n                tourName : \"\",\r\n                // avatarTour : `${this.fileInput.current.files[0].name}`,\r\n                startAddress : \"\",\r\n                startDate : \"\", \r\n                endDate : \"\",\r\n                priceTour : \"\",\r\n                qtyPeople : \"\",\r\n                descriptionTour : \"\",\r\n                detailTour : \"\",\r\n                imgBase : \"\" \r\n            }\r\n        }\r\n        this.fileInput = React.createRef();\r\n    }\r\n\r\n    inputOnChange = (e) => {\r\n        this.setState({\r\n            frmTour : {\r\n                ...this.state.frmTour,\r\n                [e.target.name] : e.target.value,\r\n            }\r\n        })\r\n    }\r\n    handleOnclickButtonChooseFile = async (e) => { //convert img to base 64 string\r\n        var input = e.currentTarget;\r\n        if(input.files && input.files[0]){\r\n            var reader = new FileReader();\r\n            reader.onload = () => {\r\n                var imgTour = document.getElementById(\"imgTour\");\r\n                imgTour.src = reader.result;\r\n                this.setState({\r\n                    frmTour : {\r\n                        ...this.state.frmTour, \r\n                        imgBase : reader.result\r\n                    }\r\n                })\r\n            }\r\n            await reader.readAsDataURL(input.files[0]); // convert to base64 string\r\n        }else {\r\n            return null;\r\n        }\r\n        console.log(this.state, '[this.state]');\r\n    }\r\n\r\n    onSave = (e) => {\r\n        e.preventDefault();\r\n        var tour = this.state.frmTour;\r\n        console.log(tour, '[tour]');\r\n        var {history} = this.props; \r\n        var thisProps = this.props;\r\n        let myPromise = new Promise(function(myResolve, myReject) {\r\n            thisProps.onAddTour(tour);\r\n            myResolve(\r\n                \"aaaaaaaaaa\"\r\n            ); // when successful\r\n            myReject(\r\n                \"bbbbbbbb\"\r\n            );  // when error\r\n        });\r\n\r\n        myPromise.then(()=>{\r\n            history.push(\"/admint/all-tour\")\r\n        })\r\n    }\r\n\r\n    \r\n    render (){\r\n        return(\r\n            <div className=\"pageaddtour\">\r\n                <div className=\"form\">\r\n                    <Container>\r\n                        <legend>Add Tour</legend>\r\n                        <Form className=\"form_\" encType=\"multipart/form-data\" onSubmit = { this.onSave } >\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Control \r\n                                    type=\"text\"\r\n                                    name=\"tourID\" \r\n                                    placeholder=\"Tour ID\"\r\n                                    value = { this.state.frmTour.tourID}\r\n                                    onChange ={ this.inputOnChange }\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Control \r\n                                    type=\"text\"\r\n                                    name=\"tourName\" \r\n                                    placeholder=\"Name Tour\" \r\n                                    value = { this.state.frmTour.tourName }\r\n                                    onChange = { this.inputOnChange }\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    name=\"startAddress\"\r\n                                    placeholder=\"Start Address\" \r\n                                    value = {this.state.frmTour.startAddress}\r\n                                    onChange = { this.inputOnChange }\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    placeholder=\"Start Date\" \r\n                                    name=\"startDate\" \r\n                                    value = {this.state.frmTour.startDate}\r\n                                    onChange = { this.inputOnChange }\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    placeholder=\"End Date\" \r\n                                    name=\"endDate\" \r\n                                    value = {this.state.frmTour.endDate}\r\n                                    onChange = { this.inputOnChange }\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Control \r\n                                    type=\"number\" \r\n                                    placeholder=\"Price Tour\" \r\n                                    name=\"priceTour\" \r\n                                    value = {this.state.frmTour.priceTour}\r\n                                    onChange = { this.inputOnChange }\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Control \r\n                                    type=\"number\" \r\n                                    placeholder=\"Quantity People\" \r\n                                    name=\"qtyPeople\" \r\n                                    value = { this.state.frmTour.qtyPeople }\r\n                                    onChange = { this.inputOnChange }\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <textarea rows=\"5\" cols=\"95\"\r\n                                    type=\"text\" \r\n                                    placeholder=\"Description Tour\" \r\n                                    name=\"descriptionTour\" \r\n                                    value = { this.state.frmTour.descriptionTour }\r\n                                    onChange = { this.inputOnChange }\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <textarea rows=\"5\" cols=\"95\" \r\n                                    type=\"text\" \r\n                                    placeholder=\"Detail Tour\" \r\n                                    name=\"detailTour\" \r\n                                    value = { this.state.frmTour.detailTour }\r\n                                    onChange = { this.inputOnChange } \r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <input \r\n                                    type=\"file\" \r\n                                    name=\"avatarTour\"\r\n                                    value = { this.state.frmTour.avatarTour }\r\n                                    onChange = { this.handleOnclickButtonChooseFile }\r\n                                    ref={this.fileInput} \r\n                                /><br/>\r\n                                <div className = \"img_tour\">\r\n                                    <img id=\"imgTour\" src=\"\"/>\r\n                                </div>\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                                Create Tour\r\n                            </Button>\r\n                        </Form>\r\n                    </Container>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = ( dispatch , props) => {\r\n    return {\r\n        onAddTour : (tour) => {\r\n            dispatch(actAddTourReq(tour));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps) (PageAddTour);","D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesAdmin\\pagetour\\pageedittour\\pageedittour.js",["355","356"],"import React, { Component } from \"react\";\r\nimport { Form, Button, Container } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { actEditTourReq, actGetTourByIDReq } from \"../../../../actions/actTour\";\r\nimport \"./pageedittour.scss\";\r\nclass PageAddTour extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            tourID  : \"\",\r\n            tourName : \"\",\r\n            // avatarTour : `${this.fileInput.current.files[0].name}`,\r\n            startAddress : \"\",\r\n            startDate : \"\", \r\n            endDate : \"\",\r\n            priceTour : \"\",\r\n            qtyPeople : \"\",\r\n            descriptionTour : \"\",\r\n            detailTour : \"\",\r\n            imgBase : \"\" \r\n        }\r\n        this.fileInput = React.createRef();\r\n    }\r\n\r\n    inputOnChange = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    handleOnclickButtonChooseFile = async (e) => { //convert img to base 64 string\r\n        var input = e.currentTarget;\r\n        if(input.files && input.files[0]){\r\n            var reader = new FileReader();\r\n            reader.onload = () => {\r\n                var imgTour = document.getElementById(\"imgTour\");\r\n                imgTour.src = reader.result;\r\n                this.setState({\r\n                    ...this.state, \r\n                    imgBase : reader.result\r\n                })\r\n            }\r\n            await reader.readAsDataURL(input.files[0]); // convert to base64 string\r\n        }else {\r\n            return null;\r\n        }\r\n    }\r\n    \r\n    componentDidMount(){\r\n        let { match } = this.props;\r\n        if(match) {\r\n            let tourID = match.params.tourID;\r\n            this.props.onEditingTour(tourID);\r\n        }\r\n    }\r\n    \r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps){\r\n        if(nextProps && nextProps.itemEditing ) {\r\n            let  { itemEditing } = nextProps;\r\n            this.setState({\r\n                tourID : itemEditing.tourID,\r\n                tourName : itemEditing.tourName,\r\n                avatarTour : itemEditing.avatarTour,\r\n                startAddress : itemEditing.startAddress,\r\n                startDate : itemEditing.startDate,\r\n                endDate : itemEditing.endDate,\r\n                priceTour : itemEditing.priceTour,\r\n                qtyPeople :itemEditing.qtyPeople,\r\n                descriptionTour : itemEditing.descriptionTour,\r\n                detailTour : itemEditing.detailTour ,\r\n            })\r\n        }\r\n    }\r\n    \r\n    onEditTour = (e) => {\r\n        var  { match } = this.props;\r\n        var tourID = match.params.tourID;\r\n        e.preventDefault();\r\n        var tour = {\r\n            _id : tourID,\r\n            ...this.state,\r\n        };\r\n        var { history } = this.props;\r\n        let myPromisEditTour = new Promise((myResolve, myReject)=>{\r\n            this.props.onUpdateTour(tour);\r\n            myResolve(\r\n                \"aaaaaaa\"\r\n            );\r\n            myReject(\r\n                \"bbbbbbbbbb\"\r\n            )\r\n        })\r\n        myPromisEditTour.then(()=> {\r\n            history.push(\"/admint/all-tour\");\r\n        })\r\n    }\r\n\r\n    render (){\r\n        var {tourID , \r\n            tourName ,\r\n            avatarTour,\r\n            startAddress,\r\n            startDate,\r\n            endDate,\r\n            priceTour,\r\n            qtyPeople,\r\n            descriptionTour,\r\n            detailTour\r\n        } = this.state;\r\n        console.log(this.state, '[this.state]');\r\n        return(\r\n            <div className=\"pageaddtour\">\r\n                <div className=\"form\">\r\n                    <Container>\r\n                        <legend>Edit Tour</legend>\r\n                        <Form className=\"form_\" onSubmit = { this.onEditTour }>\r\n                            <Form.Label>Tour ID</Form.Label>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Control \r\n                                    type=\"text\"\r\n                                    name=\"tourID\" \r\n                                    placeholder=\"Tour ID\" \r\n                                    value = { tourID }\r\n                                    onChange ={ this.inputOnChange }\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Name Tour</Form.Label>\r\n                            <Form.Control \r\n                                    type=\"text\"\r\n                                    name=\"tourName\" \r\n                                    placeholder=\"Name Tour\" \r\n                                    value = { tourName }\r\n                                    onChange = { this.inputOnChange }\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Start Address</Form.Label>\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    name=\"startAddress\"\r\n                                    placeholder=\"Start Address\" \r\n                                    value = {startAddress}\r\n                                    onChange = { this.inputOnChange }\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Start Date</Form.Label>\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    placeholder=\"Start Date\" \r\n                                    name=\"startDate\" \r\n                                    value = {startDate}\r\n                                    onChange = { this.inputOnChange }\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>End Date</Form.Label>\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    placeholder=\"End Date\" \r\n                                    name=\"endDate\" \r\n                                    value = {endDate}\r\n                                    onChange = { this.inputOnChange }\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Price Tour</Form.Label>\r\n                                <Form.Control \r\n                                    type=\"number\" \r\n                                    placeholder=\"Price Tour\" \r\n                                    name=\"priceTour\" \r\n                                    value = {priceTour}\r\n                                    onChange = { this.inputOnChange }\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Quantity People</Form.Label>\r\n                                <Form.Control \r\n                                    type=\"number\" \r\n                                    placeholder=\"Quantity People\" \r\n                                    name=\"qtyPeople\" \r\n                                    value = { qtyPeople }\r\n                                    onChange = { this.inputOnChange }\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Description Tour</Form.Label>\r\n                                <textarea rows=\"5\" cols=\"95\" \r\n                                    type=\"text\" \r\n                                    placeholder=\"Description Tour\" \r\n                                    name=\"descriptionTour\" \r\n                                    value = { descriptionTour }\r\n                                    onChange = { this.inputOnChange }\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Detail Tour</Form.Label>\r\n                                <textarea rows=\"5\" cols=\"95\"\r\n                                    type=\"text\" \r\n                                    placeholder=\"Detail Tour\" \r\n                                    name=\"detailTour\" \r\n                                    value = { detailTour }\r\n                                    onChange = { this.inputOnChange }\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <input \r\n                                    type=\"file\" \r\n                                    name=\"avatarTour\"\r\n                                    // value = { avatarTour }\r\n                                    onChange = { this.handleOnclickButtonChooseFile }\r\n                                    ref={this.fileInput} \r\n                                /><br/>\r\n                                <div className = \"img_tour\">\r\n                                    <img id=\"imgTour\" src=\"\"/>\r\n                                </div>\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                                Edit Tour\r\n                            </Button>\r\n                        </Form>\r\n                    </Container>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        itemEditing : state.itemEditing\r\n    }\r\n}\r\n\r\nconst mapDisPatchToProps = (dispatch, props) => {\r\n    return {\r\n        onUpdateTour : (tour) => {\r\n            dispatch(actEditTourReq(tour))\r\n        },\r\n        onEditingTour : (id) => {\r\n            dispatch(actGetTourByIDReq(id))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDisPatchToProps) (PageAddTour);","D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesAdmin\\pagetour\\pagealltour\\pagealltour.js",["357","358"],"import React, { Component } from \"react\";\r\nimport { Button, Container, Table } from \"react-bootstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from \"react-redux\"; \r\nimport { actDeleteTourReq, actFetchToursReq } from \"../../../../actions/actTour\";\r\nimport \"./pagealltour.scss\";\r\nclass AllTourPage extends Component {\r\n    constructor (props){\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.fetchAllTour();\r\n    }\r\n\r\n    handleDeleteTour = (id) => {\r\n        this.props.onDeleteTour(id);\r\n    }\r\n\r\n    showListTour = (tours) => {\r\n        var result = null;\r\n        if(tours.length > 0) {\r\n            result = tours.map((tour,index)=>{\r\n                if(tour !== undefined){\r\n                    return(\r\n                        <tr key= {index}>\r\n                            <td>{tour.tourName}</td>\r\n                            <td>{tour.startAddress}</td>\r\n                            <td>{tour.startDate}</td>\r\n                            <td>{tour.endDate}</td>\r\n                            <td>{tour.priceTour}</td>\r\n                            <td>{tour.qtyPeople}</td>\r\n                            <td className=\"td-action\">\r\n                                <Button \r\n                                    variant=\"danger\" \r\n                                    onClick={ () => this.handleDeleteTour(tour._id) }>\r\n                                    Del\r\n                                </Button>\r\n                                <Link to={`/admint/edit-tour/${tour._id}`}>\r\n                                    <Button>\r\n                                        Edit\r\n                                    </Button>\r\n                                </Link>\r\n                            </td>\r\n                        </tr>   \r\n                    )\r\n                }\r\n            })\r\n        }\r\n        return result;\r\n    }\r\n    render () { \r\n        var { tours } = this.props;\r\n        return(\r\n            <div className=\"alltourpage\">\r\n                <Container>\r\n                    <div className=\"table-all-tour\">\r\n                        <legend>All Tour</legend>\r\n                        <Table striped bordered hover>\r\n                            <thead>\r\n                                <tr>\r\n                                <th>Name Tour</th>\r\n                                <th>Start Address</th>\r\n                                <th>Start Date</th>\r\n                                <th>End Date</th>\r\n                                <th>Price Tour (VND)</th>\r\n                                <th>QTY People</th>\r\n                                <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.showListTour(tours)}\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => { //get all data from store\r\n    return {\r\n        tours : state.tour\r\n    }\r\n}\r\n\r\nconst mapDisPatchToProps = ( dispatch, props ) => {   //save data to the store\r\n    return {\r\n        fetchAllTour : () =>{ \r\n            dispatch(actFetchToursReq());\r\n        },\r\n        onDeleteTour : (id) => {\r\n            dispatch(actDeleteTourReq(id));\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDisPatchToProps) (AllTourPage);",["359","360"],"D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesAdmin\\pageemployee\\pageallemployee\\pageallemployee.js",["361","362"],"import React, { Component } from \"react\";\r\nimport { Container, Button, Table } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { actDeleteEmployeeReq, actFetchEmployeeReq } from \"../../../../actions/actEmployees\";\r\n\r\nimport \"./pageallemployee.scss\";\r\nclass PageAllEmployee extends Component {\r\n    constructor (props){\r\n        super(props);\r\n    }\r\n    componentDidMount(){\r\n        this.props.fetchAllEmployee();\r\n    }\r\n\r\n    handleDeleteEmployee = (id) => {\r\n        this.props.onDeleteEmployee(id);\r\n    }\r\n\r\n    showAllEmployee = (employees) => {\r\n        var result = null;\r\n        if(employees.length > 0){\r\n            result = employees.map((employee, index) => {\r\n                if(employee !== undefined){\r\n                    return (\r\n                        <tr key = {index}>\r\n                            <td>{employee.nameEmployee}</td>\r\n                            <td>{employee.emailEmployee}</td>\r\n                            <td>{employee.numberPhoneEmployee}</td>\r\n                            <td>{employee.addressEmployee}</td>\r\n                            <td>{employee.dayOfBirthEmployee} </td>\r\n                            <td className=\"td-action\">\r\n                                <Button \r\n                                    variant=\"danger\" \r\n                                    onClick={ () => this.handleDeleteEmployee(employee._id) }>\r\n                                    Del\r\n                                </Button>\r\n                                <Link to={`/admint/edit-employee/${employee._id}`}>\r\n                                    <Button>\r\n                                        Edit\r\n                                    </Button>\r\n                                </Link>\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                }\r\n            })\r\n        }\r\n        return result;\r\n    }\r\n    render (){\r\n        var {employees} = this.props;\r\n        return (\r\n            <div className=\"pageallemployee\">\r\n                <Container>\r\n                    <div className=\"table-all-employee\">\r\n                        <legend>All Employee</legend>\r\n                        <Table striped bordered hover>\r\n                            <thead>\r\n                                <tr>\r\n                                <th>Name Employee</th>\r\n                                <th>Email Employee</th>\r\n                                <th>Phone</th>\r\n                                <th>Address</th>\r\n                                <th>Birth Day</th>\r\n                                <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.showAllEmployee(employees)}\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        employees : state.employee\r\n    }\r\n}\r\nconst mapDisPatchToProps = (dispatch, props) => {\r\n    return {\r\n        fetchAllEmployee : () => {\r\n            dispatch(actFetchEmployeeReq())\r\n        },\r\n        onDeleteEmployee : (id) => {\r\n            dispatch(actDeleteEmployeeReq(id))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDisPatchToProps) (PageAllEmployee);",["363","364"],"D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesAdmin\\pageemployee\\pageaddemployee\\pageaddemployee.js",["365","366","367"],"import React, { Component } from \"react\";\r\nimport { Container, Form , Button } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { actAddEmployeeReq } from \"../../../../actions/actEmployees\";\r\nimport \"./pageaddemployee.scss\";\r\nclass PageAddEmployee extends Component {\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {\r\n            txt_employeeID : \"\",\r\n            txt_nameEmployee : \"\",\r\n            avatarEmployee : \"\",\r\n            txt_dateOfBirthEmployee : \"\",\r\n            txt_genderEmployee : \"\",\r\n            txt_addressEmployee : \"\",\r\n            txt_emailEmployee :  \"\",\r\n            numberPhoneEmployee : \"\",\r\n        }\r\n        this.fileInput = React.createRef();\r\n    }\r\n\r\n\r\n    handleInputChange = (e) => {\r\n        var target = e.target;\r\n        var name = target.name;\r\n        var value = target.type === \"checkbox\" ? target.checked : target.value;\r\n        this.setState({\r\n            [name] : value\r\n        });\r\n    }\r\n    handleOnclickButtonChooseFile = async (e) => { //convert img to base 64 string\r\n        var input = e.currentTarget;\r\n        if(input.files && input.files[0]){\r\n            var reader = new FileReader();\r\n            reader.onload = () => {\r\n                var imgTour = document.getElementById(\"imgTour\");\r\n                imgTour.src = reader.result;\r\n                this.setState({\r\n                    frmTour : {\r\n                        ...this.state.frmTour, \r\n                        imgBase : reader.result\r\n                    }\r\n                })\r\n            }\r\n            await reader.readAsDataURL(input.files[0]); // convert to base64 string\r\n        }else {\r\n            return null;\r\n        }\r\n        console.log(this.state, '[this.state]');\r\n    }\r\n    onSaveEmployee = (e) => {\r\n        var {history} = this.props; \r\n        e.preventDefault();\r\n        var {\r\n            txt_employeeID ,\r\n            txt_nameEmployee ,\r\n            avatarEmployee,\r\n            txt_dateOfBirthEmployee ,\r\n            txt_genderEmployee ,\r\n            txt_addressEmployee ,\r\n            txt_emailEmployee ,\r\n            numberPhoneEmployee ,\r\n        } = this.state;\r\n        var employee = {\r\n            employeeID : txt_employeeID,\r\n            nameEmployee : txt_nameEmployee,\r\n            emailEmployee : txt_emailEmployee,\r\n            avatarEmployee : `${this.fileInput.current.files[0].name}`,\r\n            dayOfBirthEmployee : txt_dateOfBirthEmployee,\r\n            genderEmployee : txt_genderEmployee,\r\n            addressEmployee : txt_addressEmployee,\r\n            numberPhoneEmployee : numberPhoneEmployee\r\n        }\r\n        this.props.onAddEmployee(employee);\r\n        history.push(\"/admint/all-employee\");\r\n    }\r\n    render () {\r\n        var {\r\n            txt_employeeID ,\r\n            txt_nameEmployee ,\r\n            txt_dateOfBirthEmployee ,\r\n            avatarEmployee,\r\n            txt_genderEmployee ,\r\n            txt_addressEmployee ,\r\n            txt_emailEmployee ,\r\n            numberPhoneEmployee ,\r\n        } = this.state;\r\n        return (\r\n            <div className=\"pageaddemployee\">\r\n                <div className=\"form\">\r\n                    <Container>\r\n                        <legend>Add Employee</legend>\r\n                        <Form className=\"form_\" onSubmit={this.onSaveEmployee}>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    placeholder=\"Employee ID\" \r\n                                    name=\"txt_employeeID\"\r\n                                    value = { txt_employeeID } \r\n                                    onChange = { this.handleInputChange}/>\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    placeholder=\"Name Employee\" \r\n                                    name=\"txt_nameEmployee\" \r\n                                    value = { txt_nameEmployee }\r\n                                    onChange = { this.handleInputChange }/>\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    placeholder=\"Date Of Birth\" \r\n                                    name=\"txt_dateOfBirthEmployee\" \r\n                                    value = { txt_dateOfBirthEmployee }\r\n                                    onChange = { this.handleInputChange }/>\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            \r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    placeholder=\"Gender\" \r\n                                    name=\"txt_genderEmployee\" \r\n                                    value = { txt_genderEmployee } \r\n                                    onChange = { this.handleInputChange } />\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    placeholder=\"Address\" \r\n                                    name =\"txt_addressEmployee\"\r\n                                    value = { txt_addressEmployee }\r\n                                    onChange = { this.handleInputChange } />\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    placeholder=\"Email\" \r\n                                    name=\"txt_emailEmployee\"\r\n                                    value = { txt_emailEmployee }\r\n                                    onChange = { this.handleInputChange } />\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    placeholder=\"Number Phone\" \r\n                                    name=\"numberPhoneEmployee\"\r\n                                    value = { numberPhoneEmployee }\r\n                                    onChange = { this.handleInputChange } />\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <input \r\n                                    type=\"file\" \r\n                                    name=\"avatarTour\"\r\n                                    // value = { avatarEmployee }\r\n                                    onChange = { this.handleOnclickButtonChooseFile }\r\n                                    ref={this.fileInput} \r\n                                /><br/>\r\n                                <div className = \"img_tour\">\r\n                                    <img id=\"imgTour\" src=\"\"/>\r\n                                </div>\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                                Create Employee\r\n                            </Button>\r\n                        </Form>\r\n                    </Container>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDisPatchToProps = (dispatch, props) => {\r\n    return {\r\n        onAddEmployee : (employee) => {\r\n            dispatch(actAddEmployeeReq(employee))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDisPatchToProps) (PageAddEmployee);","D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesAdmin\\pageemployee\\pageeditemployee\\pageeditemployee.js",["368","369","370","371"],"import React, { Component } from \"react\";\r\nimport { Container, Form , Button } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { actFectchEmployeeIDReq, actUpdateEmployeeReq } from \"../../../../actions/actEmployees\";\r\nimport employees from \"../../../../reducers/employee\";\r\nimport \"./pageeditemployee.scss\";\r\nclass PageEditEmployee extends Component {\r\n    constructor (props) {\r\n        super(props)\r\n        this.state = {\r\n            txt_employeeID : \"\",\r\n            txt_nameEmployee : \"\",\r\n            avatarEmployee : \"\",\r\n            txt_dayOfBirthEmployee : \"\",\r\n            txt_genderEmployee : \"\",\r\n            txt_addressEmployee : \"\",\r\n            txt_emailEmployee :  \"\",\r\n            numberPhoneEmployee : \"\",\r\n        }\r\n        this.fileInput = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        let {match} = this.props;\r\n        if(match){\r\n            let employeeID = match.params.employeeID;\r\n            this.props.onEditEmployee(employeeID)\r\n        } \r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        if(nextProps && nextProps.itemEditing){\r\n            let { itemEditing } = nextProps;\r\n            this.setState({\r\n                txt_employeeID : itemEditing.employeeID,\r\n                txt_nameEmployee : itemEditing.nameEmployee,\r\n                avatarEmployee : itemEditing.avatarEmployee,\r\n                txt_dayOfBirthEmployee : itemEditing.dayOfBirthEmployee,\r\n                txt_genderEmployee : itemEditing.genderEmployee,\r\n                txt_addressEmployee :itemEditing.addressEmployee,\r\n                txt_emailEmployee :  itemEditing.emailEmployee,\r\n                numberPhoneEmployee : itemEditing.numberPhoneEmployee,\r\n            })\r\n        }\r\n    }\r\n    \r\n    handleInputOnChange = (e) => {\r\n        var target = e.target;\r\n        var name = target.name;\r\n        var value = target.type === \"checkbox\" ? target.checked : target.value;\r\n        this.setState({\r\n            [name] : value\r\n        });\r\n    }\r\n    handleOnclickButtonChooseFile = async (e) => { //convert img to base 64 string\r\n        var input = e.currentTarget;\r\n        if(input.files && input.files[0]){\r\n            var reader = new FileReader();\r\n            reader.onload = () => {\r\n                var imgTour = document.getElementById(\"imgTour\");\r\n                imgTour.src = reader.result;\r\n                this.setState({\r\n                    frmTour : {\r\n                        ...this.state.frmTour, \r\n                        imgBase : reader.result\r\n                    }\r\n                })\r\n            }\r\n            await reader.readAsDataURL(input.files[0]); // convert to base64 string\r\n        }else {\r\n            return null;\r\n        }\r\n        console.log(this.state, '[this.state]');\r\n    }\r\n\r\n    onSubmitFormEditEmployee = (e) => {\r\n        e.preventDefault();\r\n        var { history } = this.props;\r\n        var {match} = this.props;\r\n        var employeeID = match.params.employeeID;\r\n        var {\r\n            txt_employeeID ,\r\n            txt_nameEmployee ,\r\n            txt_dayOfBirthEmployee ,\r\n            avatarEmployee,\r\n            txt_genderEmployee ,\r\n            txt_addressEmployee ,\r\n            txt_emailEmployee ,\r\n            numberPhoneEmployee ,\r\n        } = this.state;\r\n        var employee = {\r\n            _id : employeeID,\r\n            employeeID : txt_employeeID,\r\n            nameEmployee : txt_nameEmployee,\r\n            emailEmployee : txt_emailEmployee,\r\n            roleEmployee : \"\",\r\n            avatarEmployee : `${this.fileInput.current.files[0].name}`,\r\n            dayOfBirthEmployee : txt_dayOfBirthEmployee,\r\n            genderEmployee : txt_genderEmployee,\r\n            addressEmployee : txt_addressEmployee,\r\n            numberPhoneEmployee : numberPhoneEmployee\r\n        }\r\n        var thisPropsEditEmployee = this.props;\r\n        let myPromisEditEmployee = new Promise((myResolve, myReject)=>{\r\n            thisPropsEditEmployee.onUpdateEmployee(employee);\r\n            myResolve(\r\n                \"aaaaaaa\"\r\n            );\r\n            myReject(\r\n                \"bbbbbbbbbb\"\r\n            )\r\n        }) \r\n        myPromisEditEmployee.then(()=> {\r\n            history.push(\"/admint/all-employee\");\r\n        })\r\n    }\r\n\r\n    render () {\r\n        var {\r\n            txt_employeeID ,\r\n            txt_nameEmployee ,\r\n            txt_dayOfBirthEmployee ,\r\n            avatarEmployee,\r\n            txt_genderEmployee ,\r\n            txt_addressEmployee ,\r\n            txt_emailEmployee ,\r\n            numberPhoneEmployee ,\r\n        } = this.state;\r\n        return (\r\n            <div className=\"pageEditemployee\">\r\n                <div className=\"form\">\r\n                    <Container>\r\n                        <legend>Edit Employee</legend>\r\n                        <Form className=\"form_\" onSubmit = {this.onSubmitFormEditEmployee}>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Employee ID</Form.Label>\r\n                                <Form.Control \r\n                                    type=\"text\"\r\n                                    placeholder=\"Employee ID\"\r\n                                    name = \"txt_employeeID\"\r\n                                    value = { txt_employeeID }\r\n                                    onChange = { this.handleInputOnChange }/>\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Name Employee</Form.Label>\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    placeholder=\"Name Employee\"\r\n                                    name = \"txt_nameEmployee\"\r\n                                    value = { txt_nameEmployee }\r\n                                    onChange = { this.handleInputOnChange } />\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Date Of Birth</Form.Label>\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    placeholder=\"Date Of Birth\"\r\n                                    name = \"txt_dayOfBirthEmployee\"\r\n                                    value = { txt_dayOfBirthEmployee }\r\n                                    onChange = { this.handleInputOnChange } />\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Gender</Form.Label>\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    placeholder=\"Gender\" \r\n                                    name = \"txt_genderEmployee\"\r\n                                    value = { txt_genderEmployee }\r\n                                    onChange = { this.handleInputOnChange }/>                         \r\n                                    <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Address Employee</Form.Label>\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    placeholder=\"Address\"\r\n                                    name = \"txt_addressEmployee\"\r\n                                    value = { txt_addressEmployee }\r\n                                    onChange = { this.handleInputOnChange }/>\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Email Employee</Form.Label>\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    placeholder=\"Email\"\r\n                                    name = \"txt_emailEmployee\"\r\n                                    value = { txt_emailEmployee } \r\n                                    onChange = { this.handleInputOnChange }/>                             \r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Number Phone</Form.Label>\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    placeholder=\"Number Phone\"\r\n                                    name = \"numberPhoneEmployee\"\r\n                                    value = { numberPhoneEmployee }\r\n                                    onChange = { this.handleInputOnChange } />\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <input \r\n                                    type=\"file\" \r\n                                    name=\"avatarTour\"\r\n                                    // value = { avatarEmployee }\r\n                                    onChange = { this.handleOnclickButtonChooseFile }\r\n                                    ref={this.fileInput} \r\n                                /><br/>\r\n                                <div className = \"img_tour\">\r\n                                    <img id=\"imgTour\" src=\"\"/>\r\n                                </div>\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                                Edit Employee\r\n                            </Button>\r\n                        </Form>\r\n                    </Container>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        itemEditing : state.itemEditing\r\n    }\r\n}\r\n\r\nconst mapDisPatchToProps = (dispatch, props) => {\r\n    return {\r\n        onEditEmployee : (id) => {\r\n            dispatch(actFectchEmployeeIDReq(id));\r\n        },\r\n        onUpdateEmployee : (employee) => {\r\n            dispatch(actUpdateEmployeeReq(employee))\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDisPatchToProps) (PageEditEmployee);",["372","373"],"D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesAdmin\\pageuser\\pagealluser\\pagealluser.js",["374","375"],"import React, { Component } from \"react\";\r\nimport {Container, Table, Button } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { actDeleteUserReq, actFetchAllTUserReq, } from \"../../../../actions/actUser\";\r\nimport \"./pagealluser.scss\";\r\nclass PageAllUser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.fetchAllUser();\r\n    }\r\n\r\n    handleOnClickDeleteUser = (userID) =>{\r\n        this.props.onDeleteUser(userID);\r\n    }\r\n\r\n    showListUser = (users) => {\r\n        var result = null;\r\n        if(users.length > 0) {\r\n            result = users.map((user, index) => {\r\n                if(user !== undefined){\r\n                    return (\r\n                        <tr key = { index }>\r\n                            <td>{user.userName}</td>\r\n                            <td>{user.password}</td>\r\n                            <td>{user.email}</td>\r\n                            <td>{user.numberPhoneUser}</td>\r\n                            <td className=\"td-action\">\r\n                                <Button \r\n                                    variant=\"danger\"\r\n                                    onClick = { ()=> { this.handleOnClickDeleteUser(user._id)}}\r\n                                >Del</Button>\r\n                                <Link to={`/admint/edit-user/${user._id}`}>\r\n                                    <Button>\r\n                                        Edit\r\n                                    </Button>\r\n                                </Link>\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                }\r\n            })\r\n        }\r\n        return result;\r\n    }\r\n    render() {\r\n        var { users } = this.props;\r\n        return(\r\n            <div className=\"pagealluser\">\r\n                <Container>\r\n                    <div className=\"table-all-user\">\r\n                        <legend>All User</legend>\r\n                        <Table striped bordered hover>\r\n                            <thead>\r\n                                <tr>\r\n                                <th>User Name</th>\r\n                                <th>Pass word</th>\r\n                                <th>Email</th>\r\n                                <th>Number Phone</th>\r\n                                <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                { this.showListUser(users) }\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        users : state.user\r\n    }\r\n}\r\n\r\nconst mapDisPatchToProps = (dispatch, props) => {\r\n    return {\r\n        fetchAllUser : () => {\r\n            dispatch(actFetchAllTUserReq());\r\n        },\r\n        onDeleteUser : (userID) => {\r\n            dispatch(actDeleteUserReq(userID))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDisPatchToProps) (PageAllUser);","D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesAdmin\\pageuser\\pageadduser\\pageadduser.js",["376"],"import React, { Component } from \"react\";\r\nimport {Container, Form, Button} from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { actAddUserReq } from \"../../../../actions/actUser\";\r\nimport \"./pageadduser.scss\";\r\n\r\nclass PageAddUser extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            frmUser : {\r\n                userName : \"\",\r\n                password : \"\",\r\n                email : \"\",\r\n                numberPhoneUser : \"\",\r\n                avatarUser : \"\",\r\n                imgBase : \"\" \r\n            }\r\n        }\r\n        this.fileInput = React.createRef();\r\n    }\r\n    handleInputOnChange = (e) => {\r\n        this.setState({\r\n            frmUser : {\r\n                ...this.state.frmUser,\r\n                [e.target.name] : e.target.value,\r\n            }\r\n        })\r\n    }\r\n    handleOnclickButtonChooseFile = async (e) => { //convert img to base 64 string\r\n        var input = e.currentTarget;\r\n        if(input.files && input.files[0]){\r\n            var reader = new FileReader();\r\n            reader.onload = () => {\r\n                var img_avatar = document.getElementById(\"img_avatar\");\r\n                img_avatar.src = reader.result;\r\n                this.setState({\r\n                    frmUser : {\r\n                        ...this.state.frmUser, \r\n                        imgBase : reader.result\r\n                    }\r\n                })\r\n            }\r\n            await reader.readAsDataURL(input.files[0]); // convert to base64 string\r\n        }else {\r\n            return null;\r\n        }\r\n        console.log(this.state, '[this.state]');\r\n    }\r\n    onSubmitFormAddUser = (e) => {\r\n        e.preventDefault();\r\n        var user = this.state.frmUser;\r\n        var { history } = this.props;\r\n        var thisProps = this.props;\r\n        let myPromisUser = new Promise ((myResolve,myReject)=>{\r\n            thisProps.onAddUser(user);\r\n            myResolve(\r\n                \"aaaaaaaaaa\"\r\n            )\r\n            myReject(\r\n                \"bbbbbbbb\"\r\n            );\r\n        });\r\n        myPromisUser.then(()=>{\r\n            history.push(\"/admint/all-user\");\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"pageadduser\">\r\n                 <div className=\"form\">\r\n                    <Container>\r\n                        <legend>Add User</legend>\r\n                        <Form className=\"form_\" encType=\"multipart/form-data\" onSubmit = {this.onSubmitFormAddUser}>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    placeholder=\"User Name\" \r\n                                    name = \"userName\"\r\n                                    value = {this.state.frmUser.userName}\r\n                                    onChange = { this.handleInputOnChange }/>\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Control \r\n                                    type=\"password\" \r\n                                    placeholder=\"Password\" \r\n                                    name = \"password\"\r\n                                    value = { this.state.frmUser.password }\r\n                                    onChange = { this.handleInputOnChange }/>\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Control \r\n                                    type=\"email\" \r\n                                    placeholder=\"Email\" \r\n                                    name = \"email\"\r\n                                    value = { this.state.frmUser.email }\r\n                                    onChange = { this.handleInputOnChange }/>\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Control \r\n                                    type=\"number\" \r\n                                    placeholder=\"Number Phone\" \r\n                                    name = \"numberPhoneUser\"\r\n                                    value = { this.state.frmUser.numberPhoneUser }\r\n                                    onChange = { this.handleInputOnChange }/>\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <input \r\n                                    type=\"file\" \r\n                                    name=\"avatarUser\"\r\n                                    // value = { this.state.frmUser.avatarUser }\r\n                                    onChange = { this.handleOnclickButtonChooseFile }\r\n                                    ref={this.fileInput} \r\n                                /><br/>\r\n                                <div className = \"img_\">\r\n                                    <img id=\"img_avatar\" src=\"\"/>\r\n                                </div>\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                                Create User\r\n                            </Button>\r\n                        </Form>\r\n                    </Container>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDisPatchToProps = (dispatch, props) => {\r\n    return{\r\n        onAddUser : (user) => {\r\n            dispatch(actAddUserReq(user))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDisPatchToProps) (PageAddUser);",["377","378"],"D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesAdmin\\pageuser\\pageedituser\\pageedituser.js",["379"],"import React, { Component } from \"react\";\r\nimport {Container, Form, Button} from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { actGetTourByIDReq, actUpdateUserReq } from \"../../../../actions/actUser\";\r\nimport \"./pageedituser.scss\";\r\n\r\nclass PageEditUser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userName : \"\",\r\n            password : \"\",\r\n            email : \"\",\r\n            numberPhoneUser : \"\",\r\n            // avatarUser : \"\",\r\n            imgBase : \"\"\r\n        }\r\n        this.fileInput = React.createRef();\r\n    }\r\n    componentDidMount () {\r\n        let { match } = this.props;\r\n        if(match){\r\n            let userID = match.params.userID;\r\n            this.props.onEditingUser(userID);\r\n        }\r\n    }\r\n    UNSAFE_componentWillReceiveProps(nextProps){\r\n        if(nextProps && nextProps.itemEditing){\r\n            let { itemEditing } = nextProps;\r\n            this.setState({\r\n                userName : itemEditing.userName,\r\n                password : itemEditing.password,\r\n                email : itemEditing.email,\r\n                numberPhoneUser : itemEditing.numberPhoneUser,\r\n                avatarUser : itemEditing.avatarUser\r\n            })\r\n        }\r\n    }\r\n    handleInputOnChange = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    handleOnclickButtonChooseFile = async (e) => { //convert img to base 64 string\r\n        var input = e.currentTarget;\r\n        if(input.files && input.files[0]){\r\n            var reader = new FileReader();\r\n            reader.onload = () => {\r\n                var img_avatar = document.getElementById(\"img_avatar\");\r\n                img_avatar.src = reader.result;\r\n                this.setState({\r\n                    ...this.state, \r\n                    imgBase : reader.result\r\n                })\r\n            }\r\n            await reader.readAsDataURL(input.files[0]); // convert to base64 string\r\n        }else {\r\n            return null;\r\n        }\r\n    }\r\n    onSubmitFormUpdateUser = (e) => {\r\n        e.preventDefault();\r\n        var { match } = this.props;\r\n        var userID = match.params.userID;\r\n        var user = {\r\n            _id : userID,\r\n            ...this.state,\r\n        };\r\n        console.log(user, '[user]');\r\n        var { history } = this.props;\r\n        var thisPropsUser =  this.props;\r\n        var myPromisUser = new Promise((myResolve, myReject) => {\r\n            thisPropsUser.onUpdateUser(user);\r\n            myResolve(\r\n                \"aaaaaaaaaaa\"\r\n            )\r\n            myReject (\r\n                \"bbbbbbbbb\"\r\n            )\r\n        });\r\n        myPromisUser.then(()=> {\r\n            history.push(\"/admint/all-user\");\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"pageedituser\">\r\n                 <div className=\"form\">\r\n                    <Container>\r\n                        <legend>Edit User</legend>\r\n                        <Form className=\"form_\" onSubmit = {this.onSubmitFormUpdateUser}>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>User Name</Form.Label>\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    placeholder=\"User Name\" \r\n                                    name = \"userName\"\r\n                                    value = {this.state.userName}\r\n                                    onChange = { this.handleInputOnChange }/>\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Password</Form.Label>\r\n                                <Form.Control \r\n                                    type=\"password\" \r\n                                    placeholder=\"Password\" \r\n                                    name = \"password\"\r\n                                    value = { this.state.password }\r\n                                    onChange = { this.handleInputOnChange }/>\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Email</Form.Label>\r\n                                <Form.Control \r\n                                    type=\"email\" \r\n                                    placeholder=\"Email\" \r\n                                    name = \"email\"\r\n                                    value = { this.state.email }\r\n                                    onChange = { this.handleInputOnChange }/>\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Number Phone</Form.Label>\r\n                                <Form.Control \r\n                                    type=\"number\" \r\n                                    placeholder=\"Number Phone\" \r\n                                    name = \"numberPhoneUser\"\r\n                                    value = { this.state.numberPhoneUser }\r\n                                    onChange = { this.handleInputOnChange }/>\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <input \r\n                                    type=\"file\" \r\n                                    name=\"avatarTour\"\r\n                                    onChange = { this.handleOnclickButtonChooseFile }\r\n                                    ref={this.fileInput} \r\n                                /><br/>\r\n                                <div className = \"img_\">\r\n                                    <img id=\"img_avatar\" src=\"\"/>\r\n                                </div>\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                                Edit User\r\n                            </Button>\r\n                        </Form>\r\n                    </Container>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        itemEditing : state.itemEditing\r\n    }\r\n}\r\nconst mapDisPatchToProps = (dispatch, props) => {\r\n    return {\r\n        onEditingUser : (userID) => {\r\n            dispatch(actGetTourByIDReq(userID));\r\n        },\r\n        onUpdateUser : (user) => {\r\n            dispatch(actUpdateUserReq(user))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDisPatchToProps) (PageEditUser);","D:\\Đồ án\\QLTourDL\\client\\src\\components\\componentsAdmin\\menusidebar\\menusidebar.js",["380"],"import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport DropDown from '../sidebar/DropDown';\r\nimport \"./menusidebar.scss\";\r\n\r\nconst menusidebar = \r\n    {\r\n        admins : [\r\n        { \r\n            group : {\r\n                    title : \"Tour\",\r\n                    exact : \"\",\r\n                    to : \"\",\r\n                    list :[{\r\n                        title : \"All Tour\",\r\n                        exact : false,\r\n                        to : \"/admint/all-tour\",\r\n                    },\r\n                    {\r\n                        title : \"Add Tour\",\r\n                        exact : false,\r\n                        to : \"/admint/add-tour\",\r\n                    }],\r\n                },\r\n            },\r\n        { \r\n            group : \r\n                {\r\n                    title : \"User\",\r\n                    exact : \"\",\r\n                    to : \"\",\r\n                    list :[{\r\n                        title : \"All User\",\r\n                        exact : false,\r\n                        to : \"/admint/all-user\",\r\n                    },\r\n                    {\r\n                        title : \"Add User\",\r\n                        exact : false,\r\n                        to : \"/admint/add-user\",\r\n                    }],\r\n                },\r\n        },\r\n        { \r\n            group : \r\n                {\r\n                    title : \"Employee\",\r\n                    exact : \"\",\r\n                    to : \"\",\r\n                    list :[{\r\n                        title : \"All Employee\",\r\n                        exact : false,\r\n                        to : \"/admint/all-employee\",\r\n                    },\r\n                    {\r\n                        title : \"Add Employee\",\r\n                        exact : false,\r\n                        to : \"/admint/add-employee\",\r\n                    }],\r\n                },\r\n        },\r\n        { \r\n            group : \r\n                {\r\n                    title : \"Chat\",\r\n                    exact : \"\",\r\n                    to : \"\",\r\n                    list :[{\r\n                        title : \"Chats\",\r\n                        exact : false,\r\n                        to : \"/admint/chat\",\r\n                    }],\r\n                },\r\n        },\r\n    ]}\r\n\r\nclass MenuSideBar extends Component {\r\n    \r\n    state = {\r\n        isShow: false,\r\n    }\r\n    showMenus = (menus) => {\r\n        return (\r\n            <div>\r\n                {menus.admins.map((val,i) => {\r\n                    return (\r\n                        <DropDown MenuItem={val} key = {i}/>\r\n                    )\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render () {\r\n        return(\r\n            <div className=\"menu-sidebar\">\r\n                { this.showMenus(menusidebar) }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default MenuSideBar;","D:\\Đồ án\\QLTourDL\\client\\src\\components\\componentsAdmin\\sidebar\\DropDown.js",["381"],"import React, { Component } from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport \"./dropdown.scss\";\r\nclass DropDown extends Component {\r\n    constructor (props){\r\n        super(props);\r\n    }\r\n    state = {\r\n        isShow: false,\r\n    }\r\n    \r\n    listMenuItem = (a) => {\r\n        return (\r\n            <div>\r\n                {\r\n                    a.group.list.map((value,index)=>{\r\n                        return(\r\n                            <li key = {index}>\r\n                                <NavLink \r\n                                    key ={index}\r\n                                    className=\"nav-link\"\r\n                                    to = {value.to} \r\n                                    >\r\n                                    {value.title}\r\n                                </NavLink>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render () {\r\n        const {isShow} = this.state;\r\n        return(\r\n            <div className=\"menu-sidebar\">\r\n                <li className=\"nav-item dropdown\" id=\"nav-item\">\r\n                    <p\r\n                        className=\"nav-link has-dropdown\" \r\n                        data-toggle=\"dropdown\"\r\n                        onClick={() => this.setState({isShow: !isShow })}>\r\n                        <i className=\"fas fa-columns\"></i>\r\n                        <Link to=\"#\">\r\n                            <span>{this.props.MenuItem.group.title}</span>\r\n                        </Link>\r\n                    </p>\r\n                    <ul className={`dropdown-menu ${isShow ? 'd-block active' : 'none'}`}  id=\"dropdown-menu-sidebar\">\r\n                        {this.listMenuItem(this.props.MenuItem)}\r\n                    </ul>\r\n                </li>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DropDown;","D:\\Đồ án\\QLTourDL\\client\\src\\reducers\\Tour.js",[],["382","383"],"D:\\Đồ án\\QLTourDL\\client\\src\\constants\\Configs.js",[],"D:\\Đồ án\\QLTourDL\\client\\src\\utils\\ApiCaller.js",[],"D:\\Đồ án\\QLTourDL\\client\\src\\reducers\\itemEditing.js",[],"D:\\Đồ án\\QLTourDL\\client\\src\\actions\\actTour.js",[],"D:\\Đồ án\\QLTourDL\\client\\src\\constants\\ActionTypeTour.js",[],"D:\\Đồ án\\QLTourDL\\client\\src\\constants\\ActionTypeEmployee.js",[],"D:\\Đồ án\\QLTourDL\\client\\src\\actions\\actEmployees.js",[],"D:\\Đồ án\\QLTourDL\\client\\src\\reducers\\employee.js",[],"D:\\Đồ án\\QLTourDL\\client\\src\\constants\\ActionTypeUser.js",[],"D:\\Đồ án\\QLTourDL\\client\\src\\actions\\actUser.js",[],"D:\\Đồ án\\QLTourDL\\client\\src\\reducers\\user.js",[],["384","385"],"D:\\Đồ án\\QLTourDL\\client\\src\\reducers\\login.js",["386"],"import * as TypesLogin from \"../constants/ActionTypeLogin\";\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { persistReducer } from 'redux-persist';\r\nvar initialState = {\r\n        isLogin : false,\r\n        dataUserLogin: null,\r\n};\r\nconst persistConfig = {\r\n    key: 'login', //key localstorega\r\n    storage: storage,\r\n    blacklist: [] //k bi thay doi hoac k dua va localstorage\r\n};\r\nconst Login = (state = initialState, action) => {   \r\n    switch(action.type){\r\n        case TypesLogin.USER_LOGIN:\r\n            if(action.dataUserLogin.code == 200){\r\n                state.isLogin = true;\r\n                state.dataUserLogin = action.dataUserLogin;\r\n                // localStorage.setItem(\"login\", JSON.stringify(state));\r\n            }\r\n            return {...state};\r\n        case TypesLogin.USER_REGISTER:\r\n            return {...state};\r\n        default : return {...state};\r\n    }\r\n}\r\n\r\nexport default persistReducer(persistConfig,Login);",["387","388"],"D:\\Đồ án\\QLTourDL\\client\\src\\actions\\actLogin.js",[],["389","390"],"D:\\Đồ án\\QLTourDL\\client\\src\\constants\\ActionTypeLogin.js",[],["391","392"],"D:\\Đồ án\\QLTourDL\\client\\src\\store\\store.js",[],"D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesAdmin\\rootAdmin.js",["393","394"],"import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport { routesAdmin } from \"../../routes\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport SideBar from \"../../components/componentsAdmin/sidebar/sidebar\";\r\nimport NavBar from \"../../components/componentsAdmin/navbar/navbar\";\r\nclass rootAdmin extends Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    showContentMenu = (routesAdmin) => {\r\n        var result = null;\r\n        if(routesAdmin.length > 0){\r\n          result = routesAdmin.map((route, index) => {\r\n            return (\r\n              <Route\r\n                key = {index}\r\n                path = { route.path }\r\n                exact = { route.exact }\r\n                component = {route.main} \r\n              />\r\n            );\r\n          });\r\n        }\r\n        return result;\r\n      }\r\n    render() {\r\n      if(this.props.login.isLogin == true){\r\n        return (\r\n            <div>\r\n                <NavBar></NavBar>\r\n                <SideBar></SideBar>\r\n                    <Switch>\r\n                      { this.showContentMenu(routesAdmin) }\r\n                    </Switch>\r\n            </div>\r\n        );\r\n      }else{\r\n        this.props.history.push(\"/login\");\r\n        return null;\r\n      }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        login : state.login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,null) (rootAdmin);","D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesFE\\rootFE.js",["395","396"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { routes } from \"../../routes\";\r\nimport Header from \"../../components/componentsFE/header/header\";\r\nimport Footer from \"../../components/componentsFE/footer/footer\";\r\nimport HomePage from \"../../pages/pagesFE/homepage/homepage\";\r\nclass rootFE extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    showContentMenu = (routes) => {\r\n        var result = null;\r\n        if(routes.length > 0){\r\n          result = routes.map((route, index) => {\r\n            return (\r\n              <Route\r\n                key = {index}\r\n                path = { route.path }\r\n                exact = { route.exact }\r\n                component = {route.main} \r\n              />\r\n            );\r\n          });\r\n        }\r\n        return result;\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header></Header>\r\n                    <Switch>\r\n                        { this.showContentMenu(routes) }\r\n                        {/* <Route exact={true} path=\"/\" component={HomePage} /> */}\r\n                    </Switch>\r\n                <Footer></Footer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        login : state.login\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null) (rootFE);","D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesAuth\\pageRegister\\pageRegister.js",["397","398","399","400","401","402","403"],"import React ,{ Component } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { actRegisterReq } from \"../../../actions/actLogin\";\r\nimport \"./pageRegister.scss\";\r\nclass PageRegister extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            txt_userName : \"\",\r\n            txt_password : \"\",\r\n            txt_re_password : \"\",\r\n            txt_email : \"\",\r\n            txt_numberPhone : \"\"\r\n        };\r\n        this.fileInput = React.createRef();\r\n    }\r\n\r\n    handleInputOnChange = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmitFormSignUp = (e) => {\r\n        e.preventDefault();\r\n        var {\r\n            txt_userName,\r\n            txt_password,\r\n            txt_re_password,\r\n            txt_email,\r\n            txt_numberPhone\r\n        } = this.state;\r\n\r\n        var userRegister = {\r\n            userName : txt_userName,\r\n            password : txt_password,\r\n            avatarUser : `${this.fileInput.current.files[0].name}`,\r\n            email : txt_email,\r\n            numberPhoneUser : txt_numberPhone\r\n        }\r\n        var { history } = this.props;\r\n        var thisProps = this.props;\r\n        let myPromisRegisterUser = new Promise((myResolve, myRejcet) => {\r\n            thisProps.onRigisterUser(userRegister);\r\n            myResolve(\"aaaaaaaaaa\");\r\n            myRejcet(\"bbbbbbbbbbbb\");\r\n        });\r\n        myPromisRegisterUser.then(()=>{\r\n            history.push(\"/login\")\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        var {\r\n            txt_userName,\r\n            txt_password,\r\n            txt_re_password,\r\n            txt_email,\r\n            txt_numberPhone\r\n        } = this.state;\r\n        return (\r\n            <div className=\"pageRegister\">\r\n                <section className=\"section\">\r\n                    <div className=\"d-flex flex-wrap align-items-stretch\">\r\n                        <div className=\"col-lg-4 col-md-6 col-12 order-lg-1 min-vh-100 order-2 bg-white\">\r\n                        <div className=\"p-4 m-3\">\r\n                            <img src=\"../../../img/logoLogin.svg\" alt=\"logo\" width=\"80\" className=\"shadow-light rounded-circle mb-5 mt-2\" />\r\n                            <h4 className=\"text-dark font-weight-normal\">Welcome to <span className=\"font-weight-bold\">DTU TOUR</span></h4>\r\n                            <p className=\"text-muted\">Create account</p>\r\n                            <Form className=\"form_\" onSubmit = {this.onSubmitFormSignUp}>\r\n                                <Form.Group controlId=\"formBasicEmail\">\r\n                                    <Form.Control \r\n                                        type=\"text\" \r\n                                        placeholder=\"User Name\" \r\n                                        name = \"txt_userName\"\r\n                                        value = {txt_userName}\r\n                                        onChange = { this.handleInputOnChange }/>\r\n                                    <Form.Text className=\"text-muted\">\r\n                                    </Form.Text>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"formBasicEmail\">\r\n                                    <Form.Control \r\n                                        type=\"password\" \r\n                                        placeholder=\"password\" \r\n                                        name = \"txt_password\"\r\n                                        value = {txt_password}\r\n                                        onChange = { this.handleInputOnChange }/>\r\n                                    <Form.Text className=\"text-muted\">\r\n                                    </Form.Text>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"formBasicEmail\">\r\n                                    <Form.Control \r\n                                        type=\"password\" \r\n                                        placeholder=\"reply password\" \r\n                                        name = \"txt_re_password\"\r\n                                        value = {txt_re_password}\r\n                                        onChange = { this.handleInputOnChange }/>\r\n                                    <Form.Text className=\"text-muted\">\r\n                                    </Form.Text>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"formBasicEmail\">\r\n                                    <Form.Control \r\n                                        type=\"email\" \r\n                                        placeholder=\"email\" \r\n                                        name = \"txt_email\"\r\n                                        value = {txt_email}\r\n                                        onChange = { this.handleInputOnChange }/>\r\n                                    <Form.Text className=\"text-muted\">\r\n                                    </Form.Text>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"formBasicEmail\">\r\n                                    <Form.Control \r\n                                        type=\"text\" \r\n                                        placeholder=\"number phone\" \r\n                                        name = \"txt_numberPhone\"\r\n                                        value = {txt_numberPhone}\r\n                                        onChange = { this.handleInputOnChange }/>\r\n                                    <Form.Text className=\"text-muted\">\r\n                                    </Form.Text>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"formBasicEmail\">\r\n                                    <input type=\"file\"  ref={this.fileInput} id=\"myfile\" name=\"myfile\"/>\r\n                                </Form.Group>\r\n                                {/* <div className=\"form-group\">\r\n                                    <div className=\"custom-control custom-checkbox\">\r\n                                    <input type=\"checkbox\" name=\"remember\" className=\"custom-control-input\" tabindex=\"3\" id=\"remember-me\"/>\r\n                                    <label className=\"custom-control-label\" for=\"remember-me\">Remember Me</label>\r\n                                    </div>\r\n                                </div> */}\r\n                                <div className=\"form-group text-right\">\r\n                                    {/* <Link to=\"#\" className=\"float-left mt-3\">\r\n                                        Forgot Password?\r\n                                    </Link> */}\r\n                                    <Button type=\"submit\" className=\"btn btn-primary btn-lg btn-icon icon-right\" tabIndex=\"4\">\r\n                                        Sign Up\r\n                                    </Button>\r\n                                </div>\r\n\r\n                                <div className=\"mt-5 text-center\">\r\n                                    Don't have an account? <a href=\"auth-register.html\">Create new one</a>\r\n                                </div>\r\n                            </Form>\r\n                            <div className=\"text-center mt-5 text-small\">\r\n                            Copyright &copy; Your Company. Made with 💙 by Stisla\r\n                                <div className=\"mt-2\">\r\n                                    <a href=\"#\">Privacy Policy</a>\r\n                                    <div className=\"bullet\"></div>\r\n                                    <a href=\"#\">Terms of Service</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"col-lg-8 col-12 order-lg-2 order-1 min-vh-100 background-walk-y position-relative overlay-gradient-bottom\"  >\r\n                            <div className=\"imgBGLogin\" style={{width : \"100%\"}}>\r\n                                <img style={{width:\"100%\"}} src=\"../../../../img/logoLogin.svg\"/>\r\n                            </div>\r\n                            <div className=\"absolute-bottom-left index-2\">\r\n                                <div className=\"text-light p-5 pb-2\">\r\n                                <div className=\"mb-5 pb-3\">\r\n                                    <h5 className=\"mb-2 display-4 font-weight-bold\">WellCome To WanderLust - Tour</h5>\r\n                                    {/* <h5 className=\"font-weight-normal text-muted-transparent\">Bali, Indonesia</h5> */}\r\n                                </div>\r\n                                Photo by <a className=\"text-light bb\" target=\"_blank\" href=\"https://unsplash.com/photos/a8lTjWJJgLA\">Justin Kauffman</a> on <a className=\"text-light bb\" target=\"_blank\" href=\"https://unsplash.com\">Unsplash</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDisPatchToProps = (dispatch, props) => {\r\n    return {\r\n        onRigisterUser : (userRegister) => {\r\n            dispatch(actRegisterReq(userRegister));\r\n        }\r\n    }\r\n} \r\nexport default connect(null, mapDisPatchToProps) (PageRegister);","D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesAuth\\pagesLogin\\pageLogin.js",["404","405","406"],"D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesFE\\pageAllTour\\pageAllTour.js",["407","408","409","410"],"import React, { Component } from 'react';\r\nimport { Container,Row, Col } from 'react-bootstrap';\r\nimport \"./pageAllTour.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { actFetchToursReq } from \"../../../actions/actTour\";\r\nimport { TOUR_IMG } from \"../../../constants/Service\";\r\nclass pageAllTour extends Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.fetchAllTour();\r\n    }\r\n\r\n    showAllTours  = (tours) => {\r\n        var result = null;\r\n        if(tours.length > 0) {\r\n            result = tours.map((tour, index) => {\r\n                if(tour !== undefined) {\r\n                    return(\r\n                        <Col lg={4} key = {index}>\r\n                            <div className=\"our-tour-item\">\r\n                                <div className=\"img-tour-item\">\r\n                                    <NavLink className=\"navLink\" to={`/detail-tour/${tour._id}`}>\r\n                                        <img src={`${TOUR_IMG}/${tour.avatarTour}`}/>\r\n                                    </NavLink>\r\n                                </div>\r\n                                <div className=\"name-tour\">\r\n                                    <NavLink to = {`/detail-tour/${tour._id}`}>\r\n                                        <legend>{tour.tourName}</legend>\r\n                                    </NavLink>\r\n                                </div>\r\n                                <div className=\"time-price-our-tour\">\r\n                                    <Row>\r\n                                        <Col lg={7}>\r\n                                            <div className=\"time-tour\">\r\n                                                <div className=\"icon-time\">\r\n                                                    <img src=\"../../../img/icon-time.svg\"/>\r\n                                                </div>\r\n                                                <fieldset>5 Days / 4 Nights</fieldset>\r\n                                            </div>\r\n                                        </Col>\r\n                                        <Col lg={5}>\r\n                                            <div className=\"price-tour\">\r\n                                                <fieldset>{tour.priceTour}<span>₫/person</span></fieldset>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                    )\r\n                }\r\n            })\r\n        }\r\n        return result;\r\n    }\r\n\r\n    render() {\r\n        var { tours } = this.props;\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <div className=\"our-tour\">\r\n                        <div className=\"title-our-tour\">\r\n                            <legend>Our Tours</legend>\r\n                        </div>\r\n                        <div className=\"list-our-tour\">\r\n                            <Row>\r\n                                {this.showAllTours(tours)}\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        tours : state.tour\r\n    }\r\n}\r\n\r\nconst mapDisPatchToProps = (dispatch, props) => {\r\n    return {\r\n        fetchAllTour : () => {\r\n            dispatch(actFetchToursReq());\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDisPatchToProps) (pageAllTour);","D:\\Đồ án\\QLTourDL\\client\\src\\components\\componentsFE\\cart\\Cart.js",["411","412","413"],"D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesFE\\orderPage\\orderPage.js",["414"],"import React, { Component } from 'react';\r\nimport { Form, Button, Container } from \"react-bootstrap\";\r\nimport { connect } from 'react-redux';\r\nclass orderPage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className = \"order-page\">\r\n                <Container>\r\n                    <legend>aaaaaaaaaaaaaaaaaaaaa</legend>\r\n                    <Form>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n                            <Form.Text className=\"text-muted\">\r\n                                Please enter your email if you change email \r\n                            </Form.Text>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Control type=\"email\" placeholder=\"Number Phone\" />\r\n                            <Form.Text className=\"text-muted\">\r\n                                Please enter your number phone if you change number phone \r\n                            </Form.Text>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Control type=\"email\" placeholder=\"Tour Name\" />\r\n                            <Form.Text className=\"text-muted\">\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Control type=\"email\" placeholder=\"Start Address\" />\r\n                            <Form.Text className=\"text-muted\">\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Control type=\"email\" placeholder=\"Start Date\" />\r\n                            <Form.Text className=\"text-muted\">\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Control type=\"email\" placeholder=\"End Date\" />\r\n                            <Form.Text className=\"text-muted\">\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Control type=\"email\" placeholder=\"Amount People Join\" />\r\n                            <Form.Text className=\"text-muted\">\r\n                            Please enter the number of participants for the tour\r\n                            (the number of participants cannot be greater than the default tour participant)\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Control type=\"email\" placeholder=\"Price Tour\" />\r\n                            <Form.Text className=\"text-muted\">\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n                        \r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Submit\r\n                        </Button>\r\n                    </Form>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => { //get \r\n    return {\r\n      userIsLogging : state.login\r\n    }\r\n}\r\nexport default connect(mapStateToProps, null) (orderPage);","D:\\Đồ án\\QLTourDL\\client\\src\\constants\\ActionCart.js",[],"D:\\Đồ án\\QLTourDL\\client\\src\\actions\\actCart.js",[],"D:\\Đồ án\\QLTourDL\\client\\src\\reducers\\cart.js",["415","416"],"import * as TypesCart from \"../constants/ActionCart\";\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { persistReducer } from 'redux-persist';\r\n\r\nvar data = JSON.parse(localStorage.getItem('CART'));\r\nvar initialState = data ? data : [];\r\n// var initialState = [\r\n//     {\r\n//         tour : {\r\n//             avatarTour: \"121241321_670001800616075_329923169218267049_o.jpg\",\r\n//             descriptionTour: \"Tour Buon Ma Thuot 5 ngay\",\r\n//             detailTour: \"123123\",\r\n//             endDate: \"25/12/2020\",\r\n//             priceTour: 10,\r\n//             qtyPeople: 1,\r\n//             startAddress: \"Da Nang\",\r\n//             startDate: \"20/12/2020\",\r\n//             tourID: \"tour12\",\r\n//             tourName: \"Tour Da Lat\",\r\n//             __v: 0,\r\n//             _id: \"5fed50316738e70ce81f82a2\",\r\n//         },\r\n//         quantity : 5,\r\n//     },\r\n//     {\r\n//         tour : {\r\n//             avatarTour: \"121241321_670001800616075_329923169218267049_o.jpg\",\r\n//             descriptionTour: \"Tour Buon Ma Thuot 5 ngay\",\r\n//             detailTour: \"123123\",\r\n//             endDate: \"25/12/2020\",\r\n//             priceTour: 10,\r\n//             qtyPeople: 1,\r\n//             startAddress: \"Da Nang\",\r\n//             startDate: \"20/12/2020\",\r\n//             tourID: \"tour12\",\r\n//             tourName: \"Tour Da Lat\",\r\n//             __v: 0,\r\n//             _id: \"5fed50316738e70ce81f82a2\",\r\n//         },\r\n//         quantity : 2,\r\n//     }\r\n// ]\r\n// const persistConfig = {\r\n//     key: 'cart', //key localstorega\r\n//     storage: storage,\r\n//     // blacklist: [] //k bi thay doi hoac k dua va localstorage\r\n// };\r\nvar findTourInCart = (cart, tour) => {\r\n    var index = -1;\r\n    if(cart.length > 0) {\r\n        for(var i = 0; i < cart.length ; i++){\r\n            if(cart[i].tour._id === tour._id){\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return index;\r\n}\r\nconst Cart = (state = initialState, action) => {\r\n    var {tour, quantity} = action;\r\n    var index = -1;       //k tim thay index = -1\r\n    switch(action.type){\r\n        case TypesCart.ADD_TO_CART : {\r\n            index = findTourInCart(state, tour);\r\n            if(index !== -1){\r\n                state[index].quantity += quantity;\r\n            }else{\r\n                state.push({ tour, quantity});\r\n            }\r\n            localStorage.setItem('CART',JSON.stringify(state));\r\n            return [...state]\r\n        }\r\n        case TypesCart.DELETE_TOUR_IN_CART : {\r\n            index = findTourInCart(state, tour);\r\n            if(index !== -1){\r\n                state.splice(index, 1);\r\n            }\r\n            localStorage.setItem('CART',JSON.stringify(state));\r\n            return [...state]; \r\n        }\r\n        case TypesCart.UPDATE_TOUR_IN_CART : {\r\n            index = findTourInCart(state, tour);\r\n            if(index !== -1){\r\n                state[index].quantity = quantity;\r\n            }\r\n            localStorage.setItem('CART', JSON.stringify(state));\r\n            return [...state];\r\n        }\r\n        default : return [...state];\r\n    }\r\n    // switch(action.type){\r\n    //     case TypesCartCart.GET_CART:\r\n    //         state = action.cart\r\n    //         console.log(state, '[state]');\r\n    //         return {...state}\r\n    //     case TypesCartCart.ADD_TO_CART:\r\n    //         return {...state};\r\n    //     default : return {...state};\r\n    // }\r\n}\r\n\r\n// export default persistReducer(persistConfig,Cart);\r\nexport default Cart;","D:\\Đồ án\\QLTourDL\\client\\src\\containers\\CartContainer.js",[],["417","418"],"D:\\Đồ án\\QLTourDL\\client\\src\\components\\componentsFE\\cart\\CartResult.js",[],"D:\\Đồ án\\QLTourDL\\client\\src\\components\\componentsFE\\cart\\CartItem.js",["419","420","421"],"D:\\Đồ án\\QLTourDL\\client\\src\\components\\componentsFE\\cart\\indexCart.js",[],"D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesAuth\\rootAuth.js",["422"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { routesAuth } from \"../../routes\";\r\nclass rootAuth extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    showContentMenu = (routesAuth) => {\r\n        var result = null;\r\n        if(routesAuth.length > 0){\r\n          result = routesAuth.map((route, index) => {\r\n            return (\r\n              <Route\r\n                key = {index}\r\n                path = { route.path }\r\n                exact = { route.exact }\r\n                component = {route.main} \r\n              />\r\n            );\r\n          });\r\n        }\r\n        return result;\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* <Header></Header> */}\r\n                    <Switch>\r\n                        { this.showContentMenu(routesAuth) }\r\n                    </Switch>\r\n                {/* <Footer></Footer> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        login : state.login\r\n    }\r\n}\r\nexport default connect(mapStateToProps, null) (rootAuth);","D:\\Đồ án\\QLTourDL\\client\\src\\reducers\\search.js",[],"D:\\Đồ án\\QLTourDL\\client\\src\\actions\\actSearch.js",[],"D:\\Đồ án\\QLTourDL\\client\\src\\constants\\Service.js",[],"D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesAdmin\\pageChat\\chat.js",["423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439"],"D:\\Đồ án\\QLTourDL\\client\\src\\constants\\ActionChat.js",[],"D:\\Đồ án\\QLTourDL\\client\\src\\reducers\\chat.js",[],"D:\\Đồ án\\QLTourDL\\client\\src\\actions\\actChat.js",[],"D:\\Đồ án\\QLTourDL\\client\\src\\pages\\pagesAdmin\\pageChat\\chatdetail.js",[],{"ruleId":"440","replacedBy":"441"},{"ruleId":"442","replacedBy":"443"},{"ruleId":"444","severity":1,"message":"445","line":12,"column":7,"nodeType":"446","messageId":"447","endLine":12,"endColumn":22},{"ruleId":"440","replacedBy":"448"},{"ruleId":"442","replacedBy":"449"},{"ruleId":"440","replacedBy":"450"},{"ruleId":"442","replacedBy":"451"},{"ruleId":"440","replacedBy":"452"},{"ruleId":"442","replacedBy":"453"},{"ruleId":"454","severity":1,"message":"455","line":62,"column":46,"nodeType":"456","messageId":"457","endLine":62,"endColumn":48},{"ruleId":"458","severity":1,"message":"459","line":69,"column":41,"nodeType":"460","endLine":69,"endColumn":86},{"ruleId":"454","severity":1,"message":"455","line":100,"column":44,"nodeType":"456","messageId":"457","endLine":100,"endColumn":46},{"ruleId":"458","severity":1,"message":"459","line":107,"column":41,"nodeType":"460","endLine":107,"endColumn":86},{"ruleId":"444","severity":1,"message":"461","line":147,"column":20,"nodeType":"446","messageId":"447","endLine":147,"endColumn":26},{"ruleId":"458","severity":1,"message":"459","line":203,"column":49,"nodeType":"460","endLine":203,"endColumn":94},{"ruleId":"458","severity":1,"message":"459","line":208,"column":49,"nodeType":"460","endLine":208,"endColumn":96},{"ruleId":"458","severity":1,"message":"459","line":213,"column":49,"nodeType":"460","endLine":213,"endColumn":94},{"ruleId":"458","severity":1,"message":"459","line":218,"column":49,"nodeType":"460","endLine":218,"endColumn":93},{"ruleId":"458","severity":1,"message":"459","line":223,"column":49,"nodeType":"460","endLine":223,"endColumn":94},{"ruleId":"458","severity":1,"message":"459","line":228,"column":49,"nodeType":"460","endLine":228,"endColumn":94},{"ruleId":"440","replacedBy":"462"},{"ruleId":"442","replacedBy":"463"},{"ruleId":"440","replacedBy":"464"},{"ruleId":"442","replacedBy":"465"},{"ruleId":"466","severity":1,"message":"467","line":11,"column":5,"nodeType":"468","messageId":"469","endLine":13,"endColumn":6},{"ruleId":"458","severity":1,"message":"459","line":30,"column":25,"nodeType":"460","endLine":30,"endColumn":73},{"ruleId":"458","severity":1,"message":"459","line":65,"column":25,"nodeType":"460","endLine":65,"endColumn":66},{"ruleId":"440","replacedBy":"470"},{"ruleId":"442","replacedBy":"471"},{"ruleId":"444","severity":1,"message":"472","line":4,"column":73,"nodeType":"446","messageId":"447","endLine":4,"endColumn":79},{"ruleId":"473","severity":1,"message":"474","line":65,"column":11,"nodeType":"460","endLine":65,"endColumn":127},{"ruleId":"458","severity":1,"message":"459","line":101,"column":29,"nodeType":"460","endLine":101,"endColumn":73},{"ruleId":"458","severity":1,"message":"459","line":106,"column":29,"nodeType":"460","endLine":106,"endColumn":73},{"ruleId":"458","severity":1,"message":"459","line":111,"column":29,"nodeType":"460","endLine":111,"endColumn":73},{"ruleId":"458","severity":1,"message":"459","line":116,"column":29,"nodeType":"460","endLine":116,"endColumn":73},{"ruleId":"458","severity":1,"message":"459","line":121,"column":29,"nodeType":"460","endLine":121,"endColumn":73},{"ruleId":"458","severity":1,"message":"459","line":126,"column":29,"nodeType":"460","endLine":126,"endColumn":73},{"ruleId":"458","severity":1,"message":"459","line":131,"column":29,"nodeType":"460","endLine":131,"endColumn":73},{"ruleId":"458","severity":1,"message":"459","line":144,"column":29,"nodeType":"460","endLine":144,"endColumn":63},{"ruleId":"475","severity":1,"message":"476","line":160,"column":54,"nodeType":"477","endLine":160,"endColumn":69},{"ruleId":"475","severity":1,"message":"476","line":163,"column":54,"nodeType":"477","endLine":163,"endColumn":69},{"ruleId":"473","severity":1,"message":"474","line":215,"column":33,"nodeType":"460","endLine":215,"endColumn":157},{"ruleId":"440","replacedBy":"478"},{"ruleId":"442","replacedBy":"479"},{"ruleId":"480","severity":1,"message":"481","line":79,"column":37,"nodeType":"460","endLine":79,"endColumn":77},{"ruleId":"480","severity":1,"message":"481","line":80,"column":37,"nodeType":"460","endLine":80,"endColumn":65},{"ruleId":"480","severity":1,"message":"481","line":117,"column":41,"nodeType":"460","endLine":117,"endColumn":120},{"ruleId":"480","severity":1,"message":"481","line":119,"column":45,"nodeType":"460","endLine":119,"endColumn":92},{"ruleId":"480","severity":1,"message":"481","line":120,"column":45,"nodeType":"460","endLine":120,"endColumn":92},{"ruleId":"480","severity":1,"message":"481","line":121,"column":45,"nodeType":"460","endLine":121,"endColumn":92},{"ruleId":"480","severity":1,"message":"481","line":123,"column":45,"nodeType":"460","endLine":123,"endColumn":83},{"ruleId":"480","severity":1,"message":"481","line":134,"column":45,"nodeType":"460","endLine":134,"endColumn":57},{"ruleId":"480","severity":1,"message":"481","line":141,"column":49,"nodeType":"460","endLine":141,"endColumn":61},{"ruleId":"480","severity":1,"message":"481","line":146,"column":82,"nodeType":"460","endLine":146,"endColumn":94},{"ruleId":"480","severity":1,"message":"481","line":147,"column":95,"nodeType":"460","endLine":147,"endColumn":107},{"ruleId":"440","replacedBy":"482"},{"ruleId":"442","replacedBy":"483"},{"ruleId":"458","severity":1,"message":"459","line":193,"column":37,"nodeType":"460","endLine":193,"endColumn":63},{"ruleId":"444","severity":1,"message":"484","line":101,"column":13,"nodeType":"446","messageId":"447","endLine":101,"endColumn":23},{"ruleId":"458","severity":1,"message":"459","line":234,"column":37,"nodeType":"460","endLine":234,"endColumn":63},{"ruleId":"466","severity":1,"message":"467","line":8,"column":5,"nodeType":"468","messageId":"469","endLine":10,"endColumn":6},{"ruleId":"454","severity":1,"message":"455","line":23,"column":44,"nodeType":"456","messageId":"457","endLine":23,"endColumn":46},{"ruleId":"440","replacedBy":"485"},{"ruleId":"442","replacedBy":"486"},{"ruleId":"466","severity":1,"message":"467","line":9,"column":5,"nodeType":"468","messageId":"469","endLine":11,"endColumn":6},{"ruleId":"454","severity":1,"message":"455","line":23,"column":54,"nodeType":"456","messageId":"457","endLine":23,"endColumn":56},{"ruleId":"440","replacedBy":"487"},{"ruleId":"442","replacedBy":"488"},{"ruleId":"444","severity":1,"message":"489","line":57,"column":13,"nodeType":"446","messageId":"447","endLine":57,"endColumn":27},{"ruleId":"444","severity":1,"message":"489","line":82,"column":13,"nodeType":"446","messageId":"447","endLine":82,"endColumn":27},{"ruleId":"458","severity":1,"message":"459","line":174,"column":37,"nodeType":"460","endLine":174,"endColumn":63},{"ruleId":"444","severity":1,"message":"490","line":5,"column":8,"nodeType":"446","messageId":"447","endLine":5,"endColumn":17},{"ruleId":"444","severity":1,"message":"489","line":85,"column":13,"nodeType":"446","messageId":"447","endLine":85,"endColumn":27},{"ruleId":"444","severity":1,"message":"489","line":123,"column":13,"nodeType":"446","messageId":"447","endLine":123,"endColumn":27},{"ruleId":"458","severity":1,"message":"459","line":221,"column":37,"nodeType":"460","endLine":221,"endColumn":63},{"ruleId":"440","replacedBy":"491"},{"ruleId":"442","replacedBy":"492"},{"ruleId":"466","severity":1,"message":"467","line":8,"column":5,"nodeType":"468","messageId":"469","endLine":10,"endColumn":6},{"ruleId":"454","severity":1,"message":"455","line":23,"column":46,"nodeType":"456","messageId":"457","endLine":23,"endColumn":48},{"ruleId":"458","severity":1,"message":"459","line":124,"column":37,"nodeType":"460","endLine":124,"endColumn":66},{"ruleId":"440","replacedBy":"493"},{"ruleId":"442","replacedBy":"494"},{"ruleId":"458","severity":1,"message":"459","line":144,"column":37,"nodeType":"460","endLine":144,"endColumn":66},{"ruleId":"444","severity":1,"message":"495","line":2,"column":10,"nodeType":"446","messageId":"447","endLine":2,"endColumn":17},{"ruleId":"466","severity":1,"message":"467","line":5,"column":5,"nodeType":"468","messageId":"469","endLine":7,"endColumn":6},{"ruleId":"440","replacedBy":"496"},{"ruleId":"442","replacedBy":"497"},{"ruleId":"440","replacedBy":"498"},{"ruleId":"442","replacedBy":"499"},{"ruleId":"500","severity":1,"message":"501","line":16,"column":42,"nodeType":"502","messageId":"503","endLine":16,"endColumn":44},{"ruleId":"440","replacedBy":"504"},{"ruleId":"442","replacedBy":"505"},{"ruleId":"440","replacedBy":"506"},{"ruleId":"442","replacedBy":"507"},{"ruleId":"440","replacedBy":"508"},{"ruleId":"442","replacedBy":"509"},{"ruleId":"466","severity":1,"message":"467","line":8,"column":5,"nodeType":"468","messageId":"469","endLine":10,"endColumn":6},{"ruleId":"500","severity":1,"message":"501","line":28,"column":35,"nodeType":"502","messageId":"503","endLine":28,"endColumn":37},{"ruleId":"444","severity":1,"message":"510","line":7,"column":8,"nodeType":"446","messageId":"447","endLine":7,"endColumn":16},{"ruleId":"466","severity":1,"message":"467","line":9,"column":5,"nodeType":"468","messageId":"469","endLine":11,"endColumn":6},{"ruleId":"444","severity":1,"message":"511","line":4,"column":10,"nodeType":"446","messageId":"447","endLine":4,"endColumn":14},{"ruleId":"444","severity":1,"message":"512","line":31,"column":13,"nodeType":"446","messageId":"447","endLine":31,"endColumn":28},{"ruleId":"480","severity":1,"message":"481","line":149,"column":37,"nodeType":"460","endLine":149,"endColumn":49},{"ruleId":"480","severity":1,"message":"481","line":151,"column":37,"nodeType":"460","endLine":151,"endColumn":49},{"ruleId":"458","severity":1,"message":"459","line":158,"column":33,"nodeType":"460","endLine":158,"endColumn":98},{"ruleId":"475","severity":1,"message":"476","line":166,"column":71,"nodeType":"477","endLine":166,"endColumn":86},{"ruleId":"475","severity":1,"message":"476","line":166,"column":186,"nodeType":"477","endLine":166,"endColumn":201},{"ruleId":"480","severity":1,"message":"481","line":107,"column":33,"nodeType":"460","endLine":107,"endColumn":45},{"ruleId":"480","severity":1,"message":"481","line":109,"column":33,"nodeType":"460","endLine":109,"endColumn":45},{"ruleId":"458","severity":1,"message":"459","line":116,"column":33,"nodeType":"460","endLine":116,"endColumn":98},{"ruleId":"466","severity":1,"message":"467","line":9,"column":5,"nodeType":"468","messageId":"469","endLine":11,"endColumn":6},{"ruleId":"454","severity":1,"message":"455","line":20,"column":46,"nodeType":"456","messageId":"457","endLine":20,"endColumn":48},{"ruleId":"458","severity":1,"message":"459","line":27,"column":41,"nodeType":"460","endLine":27,"endColumn":86},{"ruleId":"458","severity":1,"message":"459","line":40,"column":53,"nodeType":"460","endLine":40,"endColumn":92},{"ruleId":"444","severity":1,"message":"513","line":2,"column":21,"nodeType":"446","messageId":"447","endLine":2,"endColumn":26},{"ruleId":"444","severity":1,"message":"514","line":2,"column":28,"nodeType":"446","messageId":"447","endLine":2,"endColumn":34},{"ruleId":"444","severity":1,"message":"515","line":3,"column":10,"nodeType":"446","messageId":"447","endLine":3,"endColumn":17},{"ruleId":"466","severity":1,"message":"467","line":5,"column":5,"nodeType":"468","messageId":"469","endLine":7,"endColumn":6},{"ruleId":"444","severity":1,"message":"516","line":2,"column":8,"nodeType":"446","messageId":"447","endLine":2,"endColumn":15},{"ruleId":"444","severity":1,"message":"517","line":3,"column":10,"nodeType":"446","messageId":"447","endLine":3,"endColumn":24},{"ruleId":"440","replacedBy":"518"},{"ruleId":"442","replacedBy":"519"},{"ruleId":"444","severity":1,"message":"520","line":19,"column":38,"nodeType":"446","messageId":"447","endLine":19,"endColumn":53},{"ruleId":"444","severity":1,"message":"520","line":25,"column":38,"nodeType":"446","messageId":"447","endLine":25,"endColumn":53},{"ruleId":"458","severity":1,"message":"459","line":40,"column":25,"nodeType":"460","endLine":42,"endColumn":27},{"ruleId":"466","severity":1,"message":"467","line":6,"column":5,"nodeType":"468","messageId":"469","endLine":8,"endColumn":6},{"ruleId":"444","severity":1,"message":"521","line":35,"column":15,"nodeType":"446","messageId":"447","endLine":35,"endColumn":21},{"ruleId":"454","severity":1,"message":"455","line":55,"column":54,"nodeType":"456","messageId":"457","endLine":55,"endColumn":56},{"ruleId":"454","severity":1,"message":"455","line":57,"column":56,"nodeType":"456","messageId":"457","endLine":57,"endColumn":58},{"ruleId":"458","severity":1,"message":"459","line":218,"column":21,"nodeType":"460","endLine":218,"endColumn":169},{"ruleId":"458","severity":1,"message":"459","line":219,"column":21,"nodeType":"460","endLine":219,"endColumn":169},{"ruleId":"458","severity":1,"message":"459","line":220,"column":21,"nodeType":"460","endLine":220,"endColumn":168},{"ruleId":"458","severity":1,"message":"459","line":221,"column":21,"nodeType":"460","endLine":221,"endColumn":169},{"ruleId":"458","severity":1,"message":"459","line":222,"column":21,"nodeType":"460","endLine":222,"endColumn":169},{"ruleId":"458","severity":1,"message":"459","line":223,"column":21,"nodeType":"460","endLine":223,"endColumn":166},{"ruleId":"458","severity":1,"message":"459","line":224,"column":21,"nodeType":"460","endLine":224,"endColumn":166},{"ruleId":"458","severity":1,"message":"459","line":225,"column":21,"nodeType":"460","endLine":225,"endColumn":169},{"ruleId":"458","severity":1,"message":"459","line":226,"column":21,"nodeType":"460","endLine":226,"endColumn":169},{"ruleId":"458","severity":1,"message":"459","line":228,"column":21,"nodeType":"460","endLine":228,"endColumn":169},{"ruleId":"458","severity":1,"message":"459","line":229,"column":21,"nodeType":"460","endLine":229,"endColumn":169},{"ruleId":"458","severity":1,"message":"459","line":230,"column":21,"nodeType":"460","endLine":230,"endColumn":169},{"ruleId":"475","severity":1,"message":"476","line":237,"column":17,"nodeType":"477","endLine":237,"endColumn":32},{"ruleId":"458","severity":1,"message":"459","line":254,"column":21,"nodeType":"460","endLine":254,"endColumn":112},"no-native-reassign",["522"],"no-negated-in-lhs",["523"],"no-unused-vars","'composeEnhancer' is assigned a value but never used.","Identifier","unusedVar",["522"],["523"],["522"],["523"],["522"],["523"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'search' is assigned a value but never used.",["522"],["523"],["522"],["523"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["522"],["523"],"'Thumbs' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["522"],["523"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["522"],["523"],"'avatarTour' is assigned a value but never used.",["522"],["523"],["522"],["523"],"'avatarEmployee' is assigned a value but never used.","'employees' is defined but never used.",["522"],["523"],["522"],["523"],"'NavLink' is defined but never used.",["522"],["523"],["522"],["523"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["522"],["523"],["522"],["523"],["522"],["523"],"'HomePage' is defined but never used.","'Link' is defined but never used.","'txt_re_password' is assigned a value but never used.","'Table' is defined but never used.","'Button' is defined but never used.","'connect' is defined but never used.","'storage' is defined but never used.","'persistReducer' is defined but never used.",["522"],["523"],"'onChangeMessage' is assigned a value but never used.","'socket' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]